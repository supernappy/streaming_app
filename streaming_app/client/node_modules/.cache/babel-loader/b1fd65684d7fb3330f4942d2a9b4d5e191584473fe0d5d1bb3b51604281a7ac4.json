{"ast":null,"code":"// Generate lyrics for a track using AI\nexport const generateLyricsAPI=data=>{// data: { title, artist, file (optional) }\nconst formData=new FormData();if(data.file)formData.append('audio',data.file);if(data.title)formData.append('title',data.title);if(data.artist)formData.append('artist',data.artist);return api.post('/tracks/generate-lyrics',formData,{headers:{'Content-Type':'multipart/form-data'}});};import axios from'axios';// Create axios instance with base configuration\nconst api=axios.create({baseURL:(process.env.REACT_APP_API_URL||'http://localhost:5002')+'/api',timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle errors\napi.interceptors.response.use(response=>{return response;},error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token expired or invalid\nlocalStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});// Auth API\nexport const authAPI={login:(email,password)=>{console.log('🌐 API DEBUG: Making login request to:',`${api.defaults.baseURL}/auth/login`);console.log('🌐 API DEBUG: Login payload:',{email,password:'***'});return api.post('/auth/login',{email,password});},register:userData=>api.post('/auth/register',userData),logout:()=>api.post('/auth/logout'),getProfile:()=>api.get('/auth/profile'),updateProfile:userData=>api.put('/auth/profile',userData)};// Tracks API\nexport const tracksAPI={getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/tracks',{params});},getById:id=>api.get(`/tracks/${id}`),getUserTracks:()=>api.get('/tracks/user'),upload:formData=>api.post('/tracks',formData,{headers:{'Content-Type':'multipart/form-data'}}),update:(id,data)=>api.put(`/tracks/${id}`,data),delete:id=>api.delete(`/tracks/${id}`),like:id=>api.post(`/tracks/${id}/like`),unlike:id=>api.delete(`/tracks/${id}/like`),generateLyrics:generateLyricsAPI};// Playlists API\nexport const playlistsAPI={getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/playlists',{params});},getById:id=>api.get(`/playlists/${id}`),create:data=>api.post('/playlists',data),update:(id,data)=>api.put(`/playlists/${id}`,data),delete:id=>api.delete(`/playlists/${id}`),addTrack:(id,trackId)=>api.post(`/playlists/${id}/tracks`,{trackId}),removeTrack:(id,trackId)=>api.delete(`/playlists/${id}/tracks/${trackId}`)};// Rooms API\nexport const roomsAPI={getAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/rooms',{params});},getById:id=>api.get(`/rooms/${id}`),create:data=>api.post('/rooms',data),update:(id,data)=>api.put(`/rooms/${id}`,data),delete:function(id){let permanent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return api.delete(`/rooms/${id}`,{params:{permanent}});},join:id=>api.post(`/rooms/${id}/join`),leave:id=>api.post(`/rooms/${id}/leave`),getParticipants:id=>api.get(`/rooms/${id}/participants`),// Room tracks management\ngetTracks:id=>api.get(`/rooms/${id}/tracks`),addTrack:(id,trackId)=>api.post(`/rooms/${id}/tracks`,{trackId}),removeTrack:(id,trackId)=>api.delete(`/rooms/${id}/tracks/${trackId}`),// Participant status update\nupdateParticipantStatus:(id,userId,status)=>api.put(`/rooms/${id}/participants/${userId}`,status),// Room settings management\ngetSettings:id=>api.get(`/rooms/${id}/settings`),updateSettings:(id,settings)=>api.put(`/rooms/${id}/settings`,settings)};// Search API\nexport const searchAPI={global:query=>api.get('/search',{params:{q:query}}),tracks:query=>api.get('/search/tracks',{params:{q:query}}),users:query=>api.get('/search/users',{params:{q:query}}),rooms:query=>api.get('/search/rooms',{params:{q:query}})};// Users API\nexport const usersAPI={getProfile:id=>api.get(`/users/${id}`),follow:id=>api.post(`/users/${id}/follow`),unfollow:id=>api.delete(`/users/${id}/follow`),getFollowers:id=>api.get(`/users/${id}/followers`),getFollowing:id=>api.get(`/users/${id}/following`)};export default api;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}