{"ast":null,"code":"import { io } from 'socket.io-client';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.currentRoom = null;\n    this.isHost = false;\n    this.listeners = new Map();\n  }\n  connect(token) {\n    if (this.socket && this.isConnected) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      try {\n        this.socket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5002', {\n          auth: {\n            token: token\n          },\n          transports: ['websocket', 'polling']\n        });\n        this.socket.on('connect', () => {\n          console.log('✅ Connected to WebSocket server');\n          this.isConnected = true;\n          resolve();\n        });\n        this.socket.on('disconnect', () => {\n          console.log('❌ Disconnected from WebSocket server');\n          this.isConnected = false;\n        });\n        this.socket.on('connect_error', error => {\n          console.error('❌ WebSocket connection error:', error);\n          reject(error);\n        });\n        this.socket.on('error', error => {\n          console.error('❌ WebSocket error:', error);\n        });\n\n        // Set up room event listeners\n        this.setupRoomListeners();\n      } catch (error) {\n        console.error('❌ Failed to create socket connection:', error);\n        reject(error);\n      }\n    });\n  }\n  setupRoomListeners() {\n    if (!this.socket) return;\n\n    // Playback synchronization events\n    this.socket.on('playback-state-sync', data => {\n      console.log('🔄 Received playback state sync:', data);\n      this.emit('playback-state-sync', data);\n    });\n    this.socket.on('sync-play', data => {\n      console.log('▶️ Received sync play:', data);\n      this.emit('sync-play', data);\n    });\n    this.socket.on('sync-pause', data => {\n      console.log('⏸️ Received sync pause:', data);\n      this.emit('sync-pause', data);\n    });\n    this.socket.on('sync-seek', data => {\n      console.log('⏩ Received sync seek:', data);\n      this.emit('sync-seek', data);\n    });\n    this.socket.on('sync-track-change', data => {\n      console.log('🎵 Received sync track change:', data);\n      this.emit('sync-track-change', data);\n    });\n    this.socket.on('sync-volume-change', data => {\n      console.log('🔊 Received sync volume change:', data);\n      this.emit('sync-volume-change', data);\n    });\n\n    // Room events\n    this.socket.on('user-joined', data => {\n      console.log('👋 User joined room:', data);\n      this.emit('user-joined', data);\n    });\n    this.socket.on('user-left', data => {\n      console.log('👋 User left room:', data);\n      this.emit('user-left', data);\n    });\n  }\n  joinRoom(roomId, isHost = false) {\n    if (!this.socket || !this.isConnected) {\n      console.error('❌ Cannot join room: not connected to server');\n      return;\n    }\n    this.currentRoom = roomId;\n    this.isHost = isHost;\n    console.log(`🚪 Joining room ${roomId} as ${isHost ? 'host' : 'participant'}`);\n    this.socket.emit('join-room', roomId);\n  }\n  leaveRoom() {\n    if (!this.socket || !this.currentRoom) return;\n    console.log(`🚪 Leaving room ${this.currentRoom}`);\n    this.socket.emit('leave-room');\n    this.currentRoom = null;\n    this.isHost = false;\n  }\n\n  // HOST ONLY: Control playback for entire room\n  hostPlay(trackId, currentTime = 0) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n    console.log('▶️ HOST: Triggering play for room', {\n      trackId,\n      currentTime\n    });\n    this.socket.emit('host-play', {\n      trackId,\n      currentTime\n    });\n  }\n  hostPause(currentTime = 0) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n    console.log('⏸️ HOST: Triggering pause for room', {\n      currentTime\n    });\n    this.socket.emit('host-pause', {\n      currentTime\n    });\n  }\n  hostSeek(currentTime) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n    console.log('⏩ HOST: Triggering seek for room', {\n      currentTime\n    });\n    this.socket.emit('host-seek', {\n      currentTime\n    });\n  }\n  hostChangeTrack(trackId, autoPlay = false) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n    console.log('🎵 HOST: Triggering track change for room', {\n      trackId,\n      autoPlay\n    });\n    this.socket.emit('host-change-track', {\n      trackId,\n      autoPlay\n    });\n  }\n  hostVolumeChange(volume) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n    console.log('🔊 HOST: Triggering volume change for room', {\n      volume\n    });\n    this.socket.emit('host-volume-change', {\n      volume\n    });\n  }\n  requestPlaybackSync() {\n    if (!this.socket || !this.currentRoom) return;\n    console.log('🔄 Requesting playback sync');\n    this.socket.emit('request-playback-sync');\n  }\n\n  // Event listener management\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(callback);\n  }\n  off(event, callback) {\n    if (!this.listeners.has(event)) return;\n    const callbacks = this.listeners.get(event);\n    const index = callbacks.indexOf(callback);\n    if (index > -1) {\n      callbacks.splice(index, 1);\n    }\n  }\n  emit(event, data) {\n    if (!this.listeners.has(event)) return;\n    this.listeners.get(event).forEach(callback => {\n      try {\n        callback(data);\n      } catch (error) {\n        console.error(`Error in socket event listener for ${event}:`, error);\n      }\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n      this.currentRoom = null;\n      this.isHost = false;\n      this.listeners.clear();\n    }\n  }\n\n  // Getters\n  get connected() {\n    return this.isConnected;\n  }\n  get roomId() {\n    return this.currentRoom;\n  }\n  get hostStatus() {\n    return this.isHost;\n  }\n}\n\n// Export singleton instance\nexport default new SocketService();","map":{"version":3,"names":["io","SocketService","constructor","socket","isConnected","currentRoom","isHost","listeners","Map","connect","token","Promise","resolve","reject","process","env","REACT_APP_SERVER_URL","auth","transports","on","console","log","error","setupRoomListeners","data","emit","joinRoom","roomId","leaveRoom","hostPlay","trackId","currentTime","warn","hostPause","hostSeek","hostChangeTrack","autoPlay","hostVolumeChange","volume","requestPlaybackSync","event","callback","has","set","get","push","off","callbacks","index","indexOf","splice","forEach","disconnect","clear","connected","hostStatus"],"sources":["/Users/walesolagbade/streaming_app/client/src/services/socketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.currentRoom = null;\n    this.isHost = false;\n    this.listeners = new Map();\n  }\n\n  connect(token) {\n    if (this.socket && this.isConnected) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        this.socket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5002', {\n          auth: {\n            token: token\n          },\n          transports: ['websocket', 'polling']\n        });\n\n        this.socket.on('connect', () => {\n          console.log('✅ Connected to WebSocket server');\n          this.isConnected = true;\n          resolve();\n        });\n\n        this.socket.on('disconnect', () => {\n          console.log('❌ Disconnected from WebSocket server');\n          this.isConnected = false;\n        });\n\n        this.socket.on('connect_error', (error) => {\n          console.error('❌ WebSocket connection error:', error);\n          reject(error);\n        });\n\n        this.socket.on('error', (error) => {\n          console.error('❌ WebSocket error:', error);\n        });\n\n        // Set up room event listeners\n        this.setupRoomListeners();\n\n      } catch (error) {\n        console.error('❌ Failed to create socket connection:', error);\n        reject(error);\n      }\n    });\n  }\n\n  setupRoomListeners() {\n    if (!this.socket) return;\n\n    // Playback synchronization events\n    this.socket.on('playback-state-sync', (data) => {\n      console.log('🔄 Received playback state sync:', data);\n      this.emit('playback-state-sync', data);\n    });\n\n    this.socket.on('sync-play', (data) => {\n      console.log('▶️ Received sync play:', data);\n      this.emit('sync-play', data);\n    });\n\n    this.socket.on('sync-pause', (data) => {\n      console.log('⏸️ Received sync pause:', data);\n      this.emit('sync-pause', data);\n    });\n\n    this.socket.on('sync-seek', (data) => {\n      console.log('⏩ Received sync seek:', data);\n      this.emit('sync-seek', data);\n    });\n\n    this.socket.on('sync-track-change', (data) => {\n      console.log('🎵 Received sync track change:', data);\n      this.emit('sync-track-change', data);\n    });\n\n    this.socket.on('sync-volume-change', (data) => {\n      console.log('🔊 Received sync volume change:', data);\n      this.emit('sync-volume-change', data);\n    });\n\n    // Room events\n    this.socket.on('user-joined', (data) => {\n      console.log('👋 User joined room:', data);\n      this.emit('user-joined', data);\n    });\n\n    this.socket.on('user-left', (data) => {\n      console.log('👋 User left room:', data);\n      this.emit('user-left', data);\n    });\n  }\n\n  joinRoom(roomId, isHost = false) {\n    if (!this.socket || !this.isConnected) {\n      console.error('❌ Cannot join room: not connected to server');\n      return;\n    }\n\n    this.currentRoom = roomId;\n    this.isHost = isHost;\n    \n    console.log(`🚪 Joining room ${roomId} as ${isHost ? 'host' : 'participant'}`);\n    this.socket.emit('join-room', roomId);\n  }\n\n  leaveRoom() {\n    if (!this.socket || !this.currentRoom) return;\n\n    console.log(`🚪 Leaving room ${this.currentRoom}`);\n    this.socket.emit('leave-room');\n    this.currentRoom = null;\n    this.isHost = false;\n  }\n\n  // HOST ONLY: Control playback for entire room\n  hostPlay(trackId, currentTime = 0) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n\n    console.log('▶️ HOST: Triggering play for room', { trackId, currentTime });\n    this.socket.emit('host-play', { trackId, currentTime });\n  }\n\n  hostPause(currentTime = 0) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n\n    console.log('⏸️ HOST: Triggering pause for room', { currentTime });\n    this.socket.emit('host-pause', { currentTime });\n  }\n\n  hostSeek(currentTime) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n\n    console.log('⏩ HOST: Triggering seek for room', { currentTime });\n    this.socket.emit('host-seek', { currentTime });\n  }\n\n  hostChangeTrack(trackId, autoPlay = false) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n\n    console.log('🎵 HOST: Triggering track change for room', { trackId, autoPlay });\n    this.socket.emit('host-change-track', { trackId, autoPlay });\n  }\n\n  hostVolumeChange(volume) {\n    if (!this.isHost || !this.socket || !this.currentRoom) {\n      console.warn('⚠️ Cannot control playback: not host or not in room');\n      return;\n    }\n\n    console.log('🔊 HOST: Triggering volume change for room', { volume });\n    this.socket.emit('host-volume-change', { volume });\n  }\n\n  requestPlaybackSync() {\n    if (!this.socket || !this.currentRoom) return;\n\n    console.log('🔄 Requesting playback sync');\n    this.socket.emit('request-playback-sync');\n  }\n\n  // Event listener management\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(callback);\n  }\n\n  off(event, callback) {\n    if (!this.listeners.has(event)) return;\n    \n    const callbacks = this.listeners.get(event);\n    const index = callbacks.indexOf(callback);\n    if (index > -1) {\n      callbacks.splice(index, 1);\n    }\n  }\n\n  emit(event, data) {\n    if (!this.listeners.has(event)) return;\n    \n    this.listeners.get(event).forEach(callback => {\n      try {\n        callback(data);\n      } catch (error) {\n        console.error(`Error in socket event listener for ${event}:`, error);\n      }\n    });\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n      this.currentRoom = null;\n      this.isHost = false;\n      this.listeners.clear();\n    }\n  }\n\n  // Getters\n  get connected() {\n    return this.isConnected;\n  }\n\n  get roomId() {\n    return this.currentRoom;\n  }\n\n  get hostStatus() {\n    return this.isHost;\n  }\n}\n\n// Export singleton instance\nexport default new SocketService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}