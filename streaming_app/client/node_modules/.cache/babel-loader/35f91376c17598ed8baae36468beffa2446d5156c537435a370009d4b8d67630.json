{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { usePlayer } from '../contexts/PlayerContext';\n\n// Keeps a local list of tracks in sync with live play_count updates from PlayerContext/socket\nexport default function useSyncTrackCounts(initialTracks = []) {\n  _s();\n  const {\n    currentTrack\n  } = usePlayer();\n  const [tracks, setTracks] = useState(initialTracks);\n\n  // Update local list when initial prop changes\n  useEffect(() => {\n    setTracks(initialTracks);\n  }, [initialTracks]);\n\n  // Merge in play_count whenever PlayerContext currentTrack updates\n  useEffect(() => {\n    if (!(currentTrack !== null && currentTrack !== void 0 && currentTrack.id) || typeof currentTrack.play_count === 'undefined') return;\n    setTracks(prev => prev.map(t => t.id === currentTrack.id ? {\n      ...t,\n      play_count: currentTrack.play_count\n    } : t));\n  }, [currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack.id, currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack.play_count]);\n  return [tracks, setTracks];\n}\n_s(useSyncTrackCounts, \"YQJg23p9kcCwVFPFFJOdYK/vHBM=\", false, function () {\n  return [usePlayer];\n});","map":{"version":3,"names":["useEffect","useState","usePlayer","useSyncTrackCounts","initialTracks","_s","currentTrack","tracks","setTracks","id","play_count","prev","map","t"],"sources":["/Users/walesolagbade/streaming_app/client/src/hooks/useSyncTrackCounts.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { usePlayer } from '../contexts/PlayerContext';\n\n// Keeps a local list of tracks in sync with live play_count updates from PlayerContext/socket\nexport default function useSyncTrackCounts(initialTracks = []) {\n  const { currentTrack } = usePlayer();\n  const [tracks, setTracks] = useState(initialTracks);\n\n  // Update local list when initial prop changes\n  useEffect(() => {\n    setTracks(initialTracks);\n  }, [initialTracks]);\n\n  // Merge in play_count whenever PlayerContext currentTrack updates\n  useEffect(() => {\n    if (!currentTrack?.id || typeof currentTrack.play_count === 'undefined') return;\n    setTracks(prev => prev.map(t => t.id === currentTrack.id ? { ...t, play_count: currentTrack.play_count } : t));\n  }, [currentTrack?.id, currentTrack?.play_count]);\n\n  return [tracks, setTracks];\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,2BAA2B;;AAErD;AACA,eAAe,SAASC,kBAAkBA,CAACC,aAAa,GAAG,EAAE,EAAE;EAAAC,EAAA;EAC7D,MAAM;IAAEC;EAAa,CAAC,GAAGJ,SAAS,CAAC,CAAC;EACpC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAACG,aAAa,CAAC;;EAEnD;EACAJ,SAAS,CAAC,MAAM;IACdQ,SAAS,CAACJ,aAAa,CAAC;EAC1B,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACAJ,SAAS,CAAC,MAAM;IACd,IAAI,EAACM,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEG,EAAE,KAAI,OAAOH,YAAY,CAACI,UAAU,KAAK,WAAW,EAAE;IACzEF,SAAS,CAACG,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKH,YAAY,CAACG,EAAE,GAAG;MAAE,GAAGI,CAAC;MAAEH,UAAU,EAAEJ,YAAY,CAACI;IAAW,CAAC,GAAGG,CAAC,CAAC,CAAC;EAChH,CAAC,EAAE,CAACP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,EAAE,EAAEH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,UAAU,CAAC,CAAC;EAEhD,OAAO,CAACH,MAAM,EAAEC,SAAS,CAAC;AAC5B;AAACH,EAAA,CAhBuBF,kBAAkB;EAAA,QACfD,SAAS;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}