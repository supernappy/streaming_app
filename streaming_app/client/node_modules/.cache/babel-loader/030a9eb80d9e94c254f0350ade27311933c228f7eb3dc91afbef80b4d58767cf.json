{"ast":null,"code":"var _jsxFileName = \"/Users/walesolagbade/streaming_app/client/src/pages/Playlists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Grid, Card, CardContent, Box, Tabs, Tab, TextField, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Alert, Snackbar, Chip, List, ListItem, ListItemText, ListItemSecondaryAction, Checkbox, Divider } from '@mui/material';\nimport { Add, PlayArrow, Delete, Favorite, FavoriteBorder, MoreVert, Share, MusicNote } from '@mui/icons-material';\nimport axios from 'axios';\nimport { usePlayer } from '../contexts/PlayerContext';\nimport AudioPlayer from '../components/AudioPlayer';\n\n// Configure axios defaults\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5001';\naxios.defaults.withCredentials = true;\n\n// Add auth token to requests\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nconst Playlists = () => {\n  _s();\n  var _selectedPlaylist$tra2, _selectedPlaylist$tra3, _selectedPlaylist$tra4;\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [availableTracks, setAvailableTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [addTracksDialogOpen, setAddTracksDialogOpen] = useState(false);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [newPlaylist, setNewPlaylist] = useState({\n    name: '',\n    description: '',\n    is_public: false\n  });\n  const {\n    playTrack\n  } = usePlayer();\n  useEffect(() => {\n    fetchPlaylists();\n    fetchAvailableTracks();\n  }, []);\n  const fetchAvailableTracks = async () => {\n    try {\n      const response = await axios.get('/api/tracks');\n      setAvailableTracks(response.data.tracks || []);\n    } catch (error) {\n      console.error('Error fetching tracks:', error);\n    }\n  };\n  const fetchPlaylists = async () => {\n    try {\n      const response = await axios.get('/api/playlists');\n      setPlaylists(response.data.playlists || []);\n      if (response.data.playlists && response.data.playlists.length > 0) {\n        setSelectedPlaylist(response.data.playlists[0]);\n        fetchPlaylistTracks(response.data.playlists[0].id);\n      }\n    } catch (error) {\n      console.error('Error fetching playlists:', error);\n      setError('Failed to load playlists. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPlaylistTracks = async playlistId => {\n    try {\n      const response = await axios.get(`/api/playlists/${playlistId}`);\n      setSelectedPlaylist(response.data.playlist);\n    } catch (error) {\n      console.error('Error fetching playlist tracks:', error);\n    }\n  };\n  const handleCreatePlaylist = async () => {\n    if (!newPlaylist.name) return;\n    try {\n      await axios.post('/api/playlists', newPlaylist);\n      setCreateDialogOpen(false);\n      setNewPlaylist({\n        name: '',\n        description: '',\n        is_public: false\n      });\n      setSuccess('Playlist created successfully!');\n      fetchPlaylists();\n    } catch (error) {\n      console.error('Error creating playlist:', error);\n      setError('Failed to create playlist. Please try again.');\n    }\n  };\n  const handleAddTracks = async () => {\n    if (!selectedPlaylist || selectedTracks.length === 0) return;\n    try {\n      // Add each selected track to the playlist\n      for (const trackId of selectedTracks) {\n        await axios.post(`/api/playlists/${selectedPlaylist.id}/tracks`, {\n          track_id: trackId\n        });\n      }\n      setAddTracksDialogOpen(false);\n      setSelectedTracks([]);\n      setSuccess(`Added ${selectedTracks.length} track(s) to playlist!`);\n      fetchPlaylistTracks(selectedPlaylist.id);\n    } catch (error) {\n      console.error('Error adding tracks to playlist:', error);\n      setError('Failed to add tracks to playlist. Please try again.');\n    }\n  };\n  const handleRemoveTrack = async trackId => {\n    if (!selectedPlaylist) return;\n    try {\n      await axios.delete(`/api/playlists/${selectedPlaylist.id}/tracks/${trackId}`);\n      setSuccess('Track removed from playlist!');\n      fetchPlaylistTracks(selectedPlaylist.id);\n    } catch (error) {\n      console.error('Error removing track from playlist:', error);\n      setError('Failed to remove track. Please try again.');\n    }\n  };\n  const handleTrackSelection = trackId => {\n    setSelectedTracks(prev => prev.includes(trackId) ? prev.filter(id => id !== trackId) : [...prev, trackId]);\n  };\n  const handlePlayPlaylist = () => {\n    var _selectedPlaylist$tra;\n    if ((selectedPlaylist === null || selectedPlaylist === void 0 ? void 0 : (_selectedPlaylist$tra = selectedPlaylist.tracks) === null || _selectedPlaylist$tra === void 0 ? void 0 : _selectedPlaylist$tra.length) > 0) {\n      playTrack(selectedPlaylist.tracks[0], selectedPlaylist.tracks);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading playlists...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4,\n      mb: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"My Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 22\n        }, this),\n        onClick: () => setCreateDialogOpen(true),\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), playlists.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'sticky',\n            top: 20\n          },\n          children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              mb: 2,\n              backgroundColor: (selectedPlaylist === null || selectedPlaylist === void 0 ? void 0 : selectedPlaylist.id) === playlist.id ? '#2a2a2a' : '#1e1e1e',\n              cursor: 'pointer',\n              '&:hover': {\n                backgroundColor: '#2a2a2a'\n              }\n            },\n            onClick: () => fetchPlaylistTracks(playlist.id),\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  color: '#fff'\n                },\n                children: playlist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [playlist.track_count || 0, \" tracks\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), playlist.description && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: playlist.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)\n          }, playlist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: selectedPlaylist ? /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: '#1e1e1e'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'start',\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  sx: {\n                    color: '#fff'\n                  },\n                  children: selectedPlaylist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [((_selectedPlaylist$tra2 = selectedPlaylist.tracks) === null || _selectedPlaylist$tra2 === void 0 ? void 0 : _selectedPlaylist$tra2.length) || 0, \" tracks \\u2022 by \", selectedPlaylist.owner_username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this), selectedPlaylist.description && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    mt: 1\n                  },\n                  children: selectedPlaylist.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 36\n                  }, this),\n                  onClick: () => setAddTracksDialogOpen(true),\n                  sx: {\n                    borderColor: '#1DB954',\n                    color: '#1DB954',\n                    '&:hover': {\n                      borderColor: '#1ed760',\n                      color: '#1ed760'\n                    }\n                  },\n                  children: \"Add Tracks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), ((_selectedPlaylist$tra3 = selectedPlaylist.tracks) === null || _selectedPlaylist$tra3 === void 0 ? void 0 : _selectedPlaylist$tra3.length) > 0 && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 38\n                  }, this),\n                  onClick: handlePlayPlaylist,\n                  sx: {\n                    backgroundColor: '#1DB954',\n                    '&:hover': {\n                      backgroundColor: '#1ed760'\n                    }\n                  },\n                  children: \"Play All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), ((_selectedPlaylist$tra4 = selectedPlaylist.tracks) === null || _selectedPlaylist$tra4 === void 0 ? void 0 : _selectedPlaylist$tra4.length) > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 2\n              },\n              children: selectedPlaylist.tracks.map((track, index) => /*#__PURE__*/_jsxDEV(AudioPlayer, {\n                track: track,\n                onPlay: track => playTrack(track, selectedPlaylist.tracks),\n                compact: true,\n                showIndex: index + 1\n              }, track.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: 'center',\n                py: 4\n              },\n              children: [/*#__PURE__*/_jsxDEV(MusicNote, {\n                sx: {\n                  fontSize: 60,\n                  color: 'text.secondary',\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: \"This playlist is empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 3\n                },\n                children: \"Add some tracks to get started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 36\n                }, this),\n                onClick: () => setAddTracksDialogOpen(true),\n                sx: {\n                  backgroundColor: '#1DB954',\n                  '&:hover': {\n                    backgroundColor: '#1ed760'\n                  }\n                },\n                children: \"Add Tracks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: '#1e1e1e'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                textAlign: 'center',\n                py: 4\n              },\n              children: \"Select a playlist to view its tracks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        py: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: \"No playlists yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Create your first playlist to organize your favorite tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 24\n        }, this),\n        onClick: () => setCreateDialogOpen(true),\n        sx: {\n          mt: 2\n        },\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: createDialogOpen,\n      onClose: () => setCreateDialogOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          backgroundColor: '#2a2a2a',\n          color: '#fff'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          color: '#fff'\n        },\n        children: \"Create New Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Playlist Name\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: newPlaylist.name,\n          onChange: e => setNewPlaylist({\n            ...newPlaylist,\n            name: e.target.value\n          }),\n          sx: {\n            mb: 2,\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: 'rgba(255,255,255,0.3)'\n              },\n              '&:hover fieldset': {\n                borderColor: 'rgba(255,255,255,0.5)'\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#1DB954'\n              }\n            },\n            '& .MuiInputBase-input': {\n              color: '#fff'\n            },\n            '& .MuiInputLabel-root': {\n              color: 'rgba(255,255,255,0.7)'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Description (optional)\",\n          fullWidth: true,\n          multiline: true,\n          rows: 3,\n          variant: \"outlined\",\n          value: newPlaylist.description,\n          onChange: e => setNewPlaylist({\n            ...newPlaylist,\n            description: e.target.value\n          }),\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: 'rgba(255,255,255,0.3)'\n              },\n              '&:hover fieldset': {\n                borderColor: 'rgba(255,255,255,0.5)'\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#1DB954'\n              }\n            },\n            '& .MuiInputBase-input': {\n              color: '#fff'\n            },\n            '& .MuiInputLabel-root': {\n              color: 'rgba(255,255,255,0.7)'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCreateDialogOpen(false),\n          sx: {\n            color: '#ccc'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreatePlaylist,\n          variant: \"contained\",\n          disabled: !newPlaylist.name,\n          sx: {\n            backgroundColor: '#1DB954',\n            '&:hover': {\n              backgroundColor: '#1ed760'\n            }\n          },\n          children: \"Create Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: addTracksDialogOpen,\n      onClose: () => setAddTracksDialogOpen(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          backgroundColor: '#2a2a2a',\n          color: '#fff',\n          maxHeight: '80vh'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          color: '#fff'\n        },\n        children: [\"Add Tracks to \\\"\", selectedPlaylist === null || selectedPlaylist === void 0 ? void 0 : selectedPlaylist.name, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 2\n          },\n          children: \"Select tracks to add to your playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), availableTracks.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            maxHeight: 400,\n            overflow: 'auto'\n          },\n          children: availableTracks.map(track => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                borderRadius: 1,\n                mb: 1,\n                backgroundColor: selectedTracks.includes(track.id) ? 'rgba(29, 185, 84, 0.1)' : 'transparent',\n                '&:hover': {\n                  backgroundColor: 'rgba(255, 255, 255, 0.05)'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedTracks.includes(track.id),\n                onChange: () => handleTrackSelection(track.id),\n                sx: {\n                  color: '#1DB954',\n                  '&.Mui-checked': {\n                    color: '#1DB954'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    color: '#fff'\n                  },\n                  children: track.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 25\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: '#ccc'\n                  },\n                  children: track.artist\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                backgroundColor: 'rgba(255,255,255,0.1)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 19\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          sx: {\n            textAlign: 'center',\n            py: 4\n          },\n          children: \"No tracks available to add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setAddTracksDialogOpen(false);\n            setSelectedTracks([]);\n          },\n          sx: {\n            color: '#ccc'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddTracks,\n          variant: \"contained\",\n          disabled: selectedTracks.length === 0,\n          sx: {\n            backgroundColor: '#1DB954',\n            '&:hover': {\n              backgroundColor: '#1ed760'\n            }\n          },\n          children: [\"Add \", selectedTracks.length, \" Track\", selectedTracks.length !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(null),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(null),\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!success,\n      autoHideDuration: 4000,\n      onClose: () => setSuccess(null),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSuccess(null),\n        severity: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlists, \"n58OYTFpkry/rECqk44b3oaz+VE=\", false, function () {\n  return [usePlayer];\n});\n_c = Playlists;\nexport default Playlists;\nvar _c;\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Grid","Card","CardContent","Box","Tabs","Tab","TextField","Button","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Alert","Snackbar","Chip","List","ListItem","ListItemText","ListItemSecondaryAction","Checkbox","Divider","Add","PlayArrow","Delete","Favorite","FavoriteBorder","MoreVert","Share","MusicNote","axios","usePlayer","AudioPlayer","jsxDEV","_jsxDEV","defaults","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","Playlists","_s","_selectedPlaylist$tra2","_selectedPlaylist$tra3","_selectedPlaylist$tra4","playlists","setPlaylists","selectedPlaylist","setSelectedPlaylist","availableTracks","setAvailableTracks","loading","setLoading","createDialogOpen","setCreateDialogOpen","addTracksDialogOpen","setAddTracksDialogOpen","selectedTracks","setSelectedTracks","error","setError","success","setSuccess","newPlaylist","setNewPlaylist","name","description","is_public","playTrack","fetchPlaylists","fetchAvailableTracks","response","get","data","tracks","console","length","fetchPlaylistTracks","id","playlistId","playlist","handleCreatePlaylist","post","handleAddTracks","trackId","track_id","handleRemoveTrack","delete","handleTrackSelection","prev","includes","filter","handlePlayPlaylist","_selectedPlaylist$tra","sx","py","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mb","display","justifyContent","alignItems","variant","gutterBottom","fontWeight","startIcon","onClick","container","spacing","item","xs","md","position","top","map","backgroundColor","cursor","color","track_count","mt","owner_username","gap","borderColor","flexDirection","track","index","onPlay","compact","showIndex","textAlign","fontSize","open","onClose","fullWidth","PaperProps","autoFocus","margin","label","value","onChange","e","target","multiline","rows","disabled","maxHeight","overflow","Fragment","borderRadius","checked","primary","title","secondary","artist","autoHideDuration","severity","_c","$RefreshReg$"],"sources":["/Users/walesolagbade/streaming_app/client/src/pages/Playlists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Box,\n  Tabs,\n  Tab,\n  TextField,\n  Button,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Alert,\n  Snackbar,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Checkbox,\n  Divider\n} from '@mui/material';\nimport { Add, PlayArrow, Delete, Favorite, FavoriteBorder, MoreVert, Share, MusicNote } from '@mui/icons-material';\nimport axios from 'axios';\nimport { usePlayer } from '../contexts/PlayerContext';\nimport AudioPlayer from '../components/AudioPlayer';\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:5001';\naxios.defaults.withCredentials = true;\n\n// Add auth token to requests\naxios.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nconst Playlists = () => {\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [availableTracks, setAvailableTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [addTracksDialogOpen, setAddTracksDialogOpen] = useState(false);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [newPlaylist, setNewPlaylist] = useState({\n    name: '',\n    description: '',\n    is_public: false\n  });\n  const { playTrack } = usePlayer();\n\n  useEffect(() => {\n    fetchPlaylists();\n    fetchAvailableTracks();\n  }, []);\n\n  const fetchAvailableTracks = async () => {\n    try {\n      const response = await axios.get('/api/tracks');\n      setAvailableTracks(response.data.tracks || []);\n    } catch (error) {\n      console.error('Error fetching tracks:', error);\n    }\n  };\n\n  const fetchPlaylists = async () => {\n    try {\n      const response = await axios.get('/api/playlists');\n      setPlaylists(response.data.playlists || []);\n      if (response.data.playlists && response.data.playlists.length > 0) {\n        setSelectedPlaylist(response.data.playlists[0]);\n        fetchPlaylistTracks(response.data.playlists[0].id);\n      }\n    } catch (error) {\n      console.error('Error fetching playlists:', error);\n      setError('Failed to load playlists. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPlaylistTracks = async (playlistId) => {\n    try {\n      const response = await axios.get(`/api/playlists/${playlistId}`);\n      setSelectedPlaylist(response.data.playlist);\n    } catch (error) {\n      console.error('Error fetching playlist tracks:', error);\n    }\n  };\n\n  const handleCreatePlaylist = async () => {\n    if (!newPlaylist.name) return;\n\n    try {\n      await axios.post('/api/playlists', newPlaylist);\n      setCreateDialogOpen(false);\n      setNewPlaylist({\n        name: '',\n        description: '',\n        is_public: false\n      });\n      setSuccess('Playlist created successfully!');\n      fetchPlaylists();\n    } catch (error) {\n      console.error('Error creating playlist:', error);\n      setError('Failed to create playlist. Please try again.');\n    }\n  };\n\n  const handleAddTracks = async () => {\n    if (!selectedPlaylist || selectedTracks.length === 0) return;\n\n    try {\n      // Add each selected track to the playlist\n      for (const trackId of selectedTracks) {\n        await axios.post(`/api/playlists/${selectedPlaylist.id}/tracks`, {\n          track_id: trackId\n        });\n      }\n      \n      setAddTracksDialogOpen(false);\n      setSelectedTracks([]);\n      setSuccess(`Added ${selectedTracks.length} track(s) to playlist!`);\n      fetchPlaylistTracks(selectedPlaylist.id);\n    } catch (error) {\n      console.error('Error adding tracks to playlist:', error);\n      setError('Failed to add tracks to playlist. Please try again.');\n    }\n  };\n\n  const handleRemoveTrack = async (trackId) => {\n    if (!selectedPlaylist) return;\n\n    try {\n      await axios.delete(`/api/playlists/${selectedPlaylist.id}/tracks/${trackId}`);\n      setSuccess('Track removed from playlist!');\n      fetchPlaylistTracks(selectedPlaylist.id);\n    } catch (error) {\n      console.error('Error removing track from playlist:', error);\n      setError('Failed to remove track. Please try again.');\n    }\n  };\n\n  const handleTrackSelection = (trackId) => {\n    setSelectedTracks(prev => \n      prev.includes(trackId) \n        ? prev.filter(id => id !== trackId)\n        : [...prev, trackId]\n    );\n  };\n\n  const handlePlayPlaylist = () => {\n    if (selectedPlaylist?.tracks?.length > 0) {\n      playTrack(selectedPlaylist.tracks[0], selectedPlaylist.tracks);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container sx={{ py: 4 }}>\n        <Typography>Loading playlists...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4, mb: 10 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold' }}>\n          My Playlists\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<Add />}\n          onClick={() => setCreateDialogOpen(true)}\n        >\n          Create Playlist\n        </Button>\n      </Box>\n\n      {playlists.length > 0 ? (\n        <Grid container spacing={3}>\n          {/* Playlist List */}\n          <Grid item xs={12} md={4}>\n            <Box sx={{ position: 'sticky', top: 20 }}>\n              {playlists.map((playlist) => (\n                <Card\n                  key={playlist.id}\n                  sx={{\n                    mb: 2,\n                    backgroundColor: selectedPlaylist?.id === playlist.id ? '#2a2a2a' : '#1e1e1e',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#2a2a2a'\n                    }\n                  }}\n                  onClick={() => fetchPlaylistTracks(playlist.id)}\n                >\n                  <CardContent>\n                    <Typography variant=\"h6\" sx={{ color: '#fff' }}>{playlist.name}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {playlist.track_count || 0} tracks\n                    </Typography>\n                    {playlist.description && (\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                        {playlist.description}\n                      </Typography>\n                    )}\n                  </CardContent>\n                </Card>\n              ))}\n            </Box>\n          </Grid>\n\n          {/* Playlist Details */}\n          <Grid item xs={12} md={8}>\n            {selectedPlaylist ? (\n              <Card sx={{ backgroundColor: '#1e1e1e' }}>\n                <CardContent>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start', mb: 3 }}>\n                    <Box>\n                      <Typography variant=\"h5\" gutterBottom sx={{ color: '#fff' }}>\n                        {selectedPlaylist.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {selectedPlaylist.tracks?.length || 0} tracks • by {selectedPlaylist.owner_username}\n                      </Typography>\n                      {selectedPlaylist.description && (\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                          {selectedPlaylist.description}\n                        </Typography>\n                      )}\n                    </Box>\n                    \n                    <Box sx={{ display: 'flex', gap: 1 }}>\n                      <Button\n                        variant=\"outlined\"\n                        startIcon={<Add />}\n                        onClick={() => setAddTracksDialogOpen(true)}\n                        sx={{\n                          borderColor: '#1DB954',\n                          color: '#1DB954',\n                          '&:hover': {\n                            borderColor: '#1ed760',\n                            color: '#1ed760'\n                          }\n                        }}\n                      >\n                        Add Tracks\n                      </Button>\n                      {selectedPlaylist.tracks?.length > 0 && (\n                        <Button\n                          variant=\"contained\"\n                          startIcon={<PlayArrow />}\n                          onClick={handlePlayPlaylist}\n                          sx={{\n                            backgroundColor: '#1DB954',\n                            '&:hover': {\n                              backgroundColor: '#1ed760'\n                            }\n                          }}\n                        >\n                          Play All\n                        </Button>\n                      )}\n                    </Box>\n                  </Box>\n\n                  {/* Track List */}\n                  {selectedPlaylist.tracks?.length > 0 ? (\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                      {selectedPlaylist.tracks.map((track, index) => (\n                        <AudioPlayer \n                          key={track.id} \n                          track={track} \n                          onPlay={(track) => playTrack(track, selectedPlaylist.tracks)}\n                          compact={true}\n                          showIndex={index + 1}\n                        />\n                      ))}\n                    </Box>\n                  ) : (\n                    <Box sx={{ textAlign: 'center', py: 4 }}>\n                      <MusicNote sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n                      <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                        This playlist is empty\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                        Add some tracks to get started\n                      </Typography>\n                      <Button\n                        variant=\"contained\"\n                        startIcon={<Add />}\n                        onClick={() => setAddTracksDialogOpen(true)}\n                        sx={{\n                          backgroundColor: '#1DB954',\n                          '&:hover': {\n                            backgroundColor: '#1ed760'\n                          }\n                        }}\n                      >\n                        Add Tracks\n                      </Button>\n                    </Box>\n                  )}\n                </CardContent>\n              </Card>\n            ) : (\n              <Card sx={{ backgroundColor: '#1e1e1e' }}>\n                <CardContent>\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\n                    Select a playlist to view its tracks\n                  </Typography>\n                </CardContent>\n              </Card>\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <Box sx={{ textAlign: 'center', py: 8 }}>\n          <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n            No playlists yet\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Create your first playlist to organize your favorite tracks\n          </Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            onClick={() => setCreateDialogOpen(true)}\n            sx={{ mt: 2 }}\n          >\n            Create Playlist\n          </Button>\n        </Box>\n      )}\n\n      {/* Create Playlist Dialog */}\n      <Dialog \n        open={createDialogOpen} \n        onClose={() => setCreateDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n        PaperProps={{\n          sx: {\n            backgroundColor: '#2a2a2a',\n            color: '#fff'\n          }\n        }}\n      >\n        <DialogTitle sx={{ color: '#fff' }}>Create New Playlist</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Playlist Name\"\n            fullWidth\n            variant=\"outlined\"\n            value={newPlaylist.name}\n            onChange={(e) => setNewPlaylist({ ...newPlaylist, name: e.target.value })}\n            sx={{ \n              mb: 2,\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': { borderColor: 'rgba(255,255,255,0.3)' },\n                '&:hover fieldset': { borderColor: 'rgba(255,255,255,0.5)' },\n                '&.Mui-focused fieldset': { borderColor: '#1DB954' },\n              },\n              '& .MuiInputBase-input': { color: '#fff' },\n              '& .MuiInputLabel-root': { color: 'rgba(255,255,255,0.7)' }\n            }}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Description (optional)\"\n            fullWidth\n            multiline\n            rows={3}\n            variant=\"outlined\"\n            value={newPlaylist.description}\n            onChange={(e) => setNewPlaylist({ ...newPlaylist, description: e.target.value })}\n            sx={{\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': { borderColor: 'rgba(255,255,255,0.3)' },\n                '&:hover fieldset': { borderColor: 'rgba(255,255,255,0.5)' },\n                '&.Mui-focused fieldset': { borderColor: '#1DB954' },\n              },\n              '& .MuiInputBase-input': { color: '#fff' },\n              '& .MuiInputLabel-root': { color: 'rgba(255,255,255,0.7)' }\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setCreateDialogOpen(false)} sx={{ color: '#ccc' }}>Cancel</Button>\n          <Button \n            onClick={handleCreatePlaylist} \n            variant=\"contained\"\n            disabled={!newPlaylist.name}\n            sx={{\n              backgroundColor: '#1DB954',\n              '&:hover': { backgroundColor: '#1ed760' }\n            }}\n          >\n            Create Playlist\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Add Tracks Dialog */}\n      <Dialog \n        open={addTracksDialogOpen} \n        onClose={() => setAddTracksDialogOpen(false)}\n        maxWidth=\"md\"\n        fullWidth\n        PaperProps={{\n          sx: {\n            backgroundColor: '#2a2a2a',\n            color: '#fff',\n            maxHeight: '80vh'\n          }\n        }}\n      >\n        <DialogTitle sx={{ color: '#fff' }}>\n          Add Tracks to \"{selectedPlaylist?.name}\"\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            Select tracks to add to your playlist\n          </Typography>\n          \n          {availableTracks.length > 0 ? (\n            <List sx={{ maxHeight: 400, overflow: 'auto' }}>\n              {availableTracks.map((track) => (\n                <React.Fragment key={track.id}>\n                  <ListItem\n                    sx={{\n                      borderRadius: 1,\n                      mb: 1,\n                      backgroundColor: selectedTracks.includes(track.id) ? 'rgba(29, 185, 84, 0.1)' : 'transparent',\n                      '&:hover': {\n                        backgroundColor: 'rgba(255, 255, 255, 0.05)'\n                      }\n                    }}\n                  >\n                    <Checkbox\n                      checked={selectedTracks.includes(track.id)}\n                      onChange={() => handleTrackSelection(track.id)}\n                      sx={{\n                        color: '#1DB954',\n                        '&.Mui-checked': {\n                          color: '#1DB954'\n                        }\n                      }}\n                    />\n                    <ListItemText\n                      primary={\n                        <Typography sx={{ color: '#fff' }}>\n                          {track.title}\n                        </Typography>\n                      }\n                      secondary={\n                        <Typography variant=\"body2\" sx={{ color: '#ccc' }}>\n                          {track.artist}\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                  <Divider sx={{ backgroundColor: 'rgba(255,255,255,0.1)' }} />\n                </React.Fragment>\n              ))}\n            </List>\n          ) : (\n            <Typography color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\n              No tracks available to add\n            </Typography>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => {\n              setAddTracksDialogOpen(false);\n              setSelectedTracks([]);\n            }} \n            sx={{ color: '#ccc' }}\n          >\n            Cancel\n          </Button>\n          <Button \n            onClick={handleAddTracks} \n            variant=\"contained\"\n            disabled={selectedTracks.length === 0}\n            sx={{\n              backgroundColor: '#1DB954',\n              '&:hover': { backgroundColor: '#1ed760' }\n            }}\n          >\n            Add {selectedTracks.length} Track{selectedTracks.length !== 1 ? 's' : ''}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Success/Error Snackbars */}\n      <Snackbar\n        open={!!error}\n        autoHideDuration={6000}\n        onClose={() => setError(null)}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n      \n      <Snackbar\n        open={!!success}\n        autoHideDuration={4000}\n        onClose={() => setSuccess(null)}\n      >\n        <Alert onClose={() => setSuccess(null)} severity=\"success\">\n          {success}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default Playlists;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}