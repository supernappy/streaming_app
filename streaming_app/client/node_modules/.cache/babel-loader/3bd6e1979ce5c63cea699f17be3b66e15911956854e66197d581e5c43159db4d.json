{"ast":null,"code":"var _jsxFileName = \"/Users/walesolagbade/streaming_app/client/src/pages/Playlists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Grid, Card, CardContent, Box, Tabs, Tab, TextField, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Alert, Snackbar, Chip, List, ListItem, ListItemText, ListItemSecondaryAction, Checkbox, Divider } from '@mui/material';\nimport { Add, PlayArrow, Delete, Favorite, FavoriteBorder, MoreVert, Share, MusicNote } from '@mui/icons-material';\nimport axios from 'axios';\nimport { usePlayer } from '../contexts/PlayerContext';\nimport AudioPlayer from '../components/AudioPlayer';\nimport useSyncTrackCounts from '../hooks/useSyncTrackCounts';\n\n// Configure axios defaults\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5002';\naxios.defaults.withCredentials = true;\n\n// Add auth token to requests\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nconst Playlists = () => {\n  _s();\n  var _selectedPlaylist$tra, _selectedPlaylist$tra2, _selectedPlaylist$tra3;\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [availableTracks, setAvailableTracks] = useState([]);\n  const [syncedAvailableTracks, setSyncedAvailableTracks] = useSyncTrackCounts([]);\n  const [loading, setLoading] = useState(true);\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [addTracksDialogOpen, setAddTracksDialogOpen] = useState(false);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [newPlaylist, setNewPlaylist] = useState({\n    name: '',\n    description: '',\n    is_public: false\n  });\n  const {\n    playTrack\n  } = usePlayer();\n  const [syncedPlaylistTracks, setSyncedPlaylistTracks] = useSyncTrackCounts([]);\n  useEffect(() => {\n    fetchPlaylists();\n    fetchAvailableTracks();\n  }, []);\n  const fetchAvailableTracks = async () => {\n    try {\n      const response = await axios.get('/api/tracks');\n      const list = response.data.tracks || [];\n      setAvailableTracks(list);\n      setSyncedAvailableTracks(list);\n    } catch (error) {\n      console.error('Error fetching tracks:', error);\n    }\n  };\n  const fetchPlaylists = async () => {\n    try {\n      const response = await axios.get('/api/playlists');\n      setPlaylists(response.data.playlists || []);\n      if (response.data.playlists && response.data.playlists.length > 0) {\n        setSelectedPlaylist(response.data.playlists[0]);\n        fetchPlaylistTracks(response.data.playlists[0].id);\n      }\n    } catch (error) {\n      console.error('Error fetching playlists:', error);\n      setError('Failed to load playlists. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPlaylistTracks = async playlistId => {\n    try {\n      var _response$data$playli;\n      const response = await axios.get(`/api/playlists/${playlistId}`);\n      setSelectedPlaylist(response.data.playlist);\n      setSyncedPlaylistTracks(((_response$data$playli = response.data.playlist) === null || _response$data$playli === void 0 ? void 0 : _response$data$playli.tracks) || []);\n    } catch (error) {\n      console.error('Error fetching playlist tracks:', error);\n    }\n  };\n  const handleCreatePlaylist = async () => {\n    if (!newPlaylist.name) return;\n    try {\n      await axios.post('/api/playlists', newPlaylist);\n      setCreateDialogOpen(false);\n      setNewPlaylist({\n        name: '',\n        description: '',\n        is_public: false\n      });\n      setSuccess('Playlist created successfully!');\n      fetchPlaylists();\n    } catch (error) {\n      console.error('Error creating playlist:', error);\n      setError('Failed to create playlist. Please try again.');\n    }\n  };\n  const handleAddTracks = async () => {\n    if (!selectedPlaylist || selectedTracks.length === 0) return;\n    try {\n      // Add each selected track to the playlist\n      for (const trackId of selectedTracks) {\n        await axios.post(`/api/playlists/${selectedPlaylist.id}/tracks`, {\n          track_id: trackId\n        });\n      }\n      setAddTracksDialogOpen(false);\n      setSelectedTracks([]);\n      setSuccess(`Added ${selectedTracks.length} track(s) to playlist!`);\n      fetchPlaylistTracks(selectedPlaylist.id);\n    } catch (error) {\n      console.error('Error adding tracks to playlist:', error);\n      setError('Failed to add tracks to playlist. Please try again.');\n    }\n  };\n  const handleRemoveTrack = async trackId => {\n    if (!selectedPlaylist) return;\n    try {\n      await axios.delete(`/api/playlists/${selectedPlaylist.id}/tracks/${trackId}`);\n      setSuccess('Track removed from playlist!');\n      fetchPlaylistTracks(selectedPlaylist.id);\n    } catch (error) {\n      console.error('Error removing track from playlist:', error);\n      setError('Failed to remove track. Please try again.');\n    }\n  };\n  const handleTrackSelection = trackId => {\n    setSelectedTracks(prev => prev.includes(trackId) ? prev.filter(id => id !== trackId) : [...prev, trackId]);\n  };\n  const handlePlayPlaylist = () => {\n    if ((syncedPlaylistTracks === null || syncedPlaylistTracks === void 0 ? void 0 : syncedPlaylistTracks.length) > 0) {\n      playTrack(syncedPlaylistTracks[0], syncedPlaylistTracks);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading playlists...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4,\n      mb: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"My Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 22\n        }, this),\n        onClick: () => setCreateDialogOpen(true),\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), playlists.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'sticky',\n            top: 20\n          },\n          children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              mb: 2,\n              backgroundColor: (selectedPlaylist === null || selectedPlaylist === void 0 ? void 0 : selectedPlaylist.id) === playlist.id ? '#2a2a2a' : '#1e1e1e',\n              cursor: 'pointer',\n              '&:hover': {\n                backgroundColor: '#2a2a2a'\n              }\n            },\n            onClick: () => fetchPlaylistTracks(playlist.id),\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  color: '#fff'\n                },\n                children: playlist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [playlist.track_count || 0, \" tracks\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), playlist.description && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: playlist.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)\n          }, playlist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: selectedPlaylist ? /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: '#1e1e1e'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'start',\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  sx: {\n                    color: '#fff'\n                  },\n                  children: selectedPlaylist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [((_selectedPlaylist$tra = selectedPlaylist.tracks) === null || _selectedPlaylist$tra === void 0 ? void 0 : _selectedPlaylist$tra.length) || 0, \" tracks \\u2022 by \", selectedPlaylist.owner_username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this), selectedPlaylist.description && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    mt: 1\n                  },\n                  children: selectedPlaylist.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 36\n                  }, this),\n                  onClick: () => setAddTracksDialogOpen(true),\n                  sx: {\n                    borderColor: '#1DB954',\n                    color: '#1DB954',\n                    '&:hover': {\n                      borderColor: '#1ed760',\n                      color: '#1ed760'\n                    }\n                  },\n                  children: \"Add Tracks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this), ((_selectedPlaylist$tra2 = selectedPlaylist.tracks) === null || _selectedPlaylist$tra2 === void 0 ? void 0 : _selectedPlaylist$tra2.length) > 0 && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 38\n                  }, this),\n                  onClick: handlePlayPlaylist,\n                  sx: {\n                    backgroundColor: '#1DB954',\n                    '&:hover': {\n                      backgroundColor: '#1ed760'\n                    }\n                  },\n                  children: \"Play All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), ((_selectedPlaylist$tra3 = selectedPlaylist.tracks) === null || _selectedPlaylist$tra3 === void 0 ? void 0 : _selectedPlaylist$tra3.length) > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 2\n              },\n              children: syncedPlaylistTracks.map((track, index) => /*#__PURE__*/_jsxDEV(AudioPlayer, {\n                track: track,\n                onPlay: track => playTrack(track, syncedPlaylistTracks),\n                compact: true,\n                showIndex: index + 1\n              }, track.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: 'center',\n                py: 4\n              },\n              children: [/*#__PURE__*/_jsxDEV(MusicNote, {\n                sx: {\n                  fontSize: 60,\n                  color: 'text.secondary',\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: \"This playlist is empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 3\n                },\n                children: \"Add some tracks to get started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 36\n                }, this),\n                onClick: () => setAddTracksDialogOpen(true),\n                sx: {\n                  backgroundColor: '#1DB954',\n                  '&:hover': {\n                    backgroundColor: '#1ed760'\n                  }\n                },\n                children: \"Add Tracks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: '#1e1e1e'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                textAlign: 'center',\n                py: 4\n              },\n              children: \"Select a playlist to view its tracks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        py: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: \"No playlists yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Create your first playlist to organize your favorite tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 24\n        }, this),\n        onClick: () => setCreateDialogOpen(true),\n        sx: {\n          mt: 2\n        },\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: createDialogOpen,\n      onClose: () => setCreateDialogOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          backgroundColor: '#2a2a2a',\n          color: '#fff'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          color: '#fff'\n        },\n        children: \"Create New Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Playlist Name\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: newPlaylist.name,\n          onChange: e => setNewPlaylist({\n            ...newPlaylist,\n            name: e.target.value\n          }),\n          sx: {\n            mb: 2,\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: 'rgba(255,255,255,0.3)'\n              },\n              '&:hover fieldset': {\n                borderColor: 'rgba(255,255,255,0.5)'\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#1DB954'\n              }\n            },\n            '& .MuiInputBase-input': {\n              color: '#fff'\n            },\n            '& .MuiInputLabel-root': {\n              color: 'rgba(255,255,255,0.7)'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Description (optional)\",\n          fullWidth: true,\n          multiline: true,\n          rows: 3,\n          variant: \"outlined\",\n          value: newPlaylist.description,\n          onChange: e => setNewPlaylist({\n            ...newPlaylist,\n            description: e.target.value\n          }),\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: 'rgba(255,255,255,0.3)'\n              },\n              '&:hover fieldset': {\n                borderColor: 'rgba(255,255,255,0.5)'\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#1DB954'\n              }\n            },\n            '& .MuiInputBase-input': {\n              color: '#fff'\n            },\n            '& .MuiInputLabel-root': {\n              color: 'rgba(255,255,255,0.7)'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCreateDialogOpen(false),\n          sx: {\n            color: '#ccc'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreatePlaylist,\n          variant: \"contained\",\n          disabled: !newPlaylist.name,\n          sx: {\n            backgroundColor: '#1DB954',\n            '&:hover': {\n              backgroundColor: '#1ed760'\n            }\n          },\n          children: \"Create Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: addTracksDialogOpen,\n      onClose: () => setAddTracksDialogOpen(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          backgroundColor: '#2a2a2a',\n          color: '#fff',\n          maxHeight: '80vh'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          color: '#fff'\n        },\n        children: [\"Add Tracks to \\\"\", selectedPlaylist === null || selectedPlaylist === void 0 ? void 0 : selectedPlaylist.name, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 2\n          },\n          children: \"Select tracks to add to your playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), syncedAvailableTracks.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            maxHeight: 400,\n            overflow: 'auto'\n          },\n          children: syncedAvailableTracks.map(track => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                borderRadius: 1,\n                mb: 1,\n                backgroundColor: selectedTracks.includes(track.id) ? 'rgba(29, 185, 84, 0.1)' : 'transparent',\n                '&:hover': {\n                  backgroundColor: 'rgba(255, 255, 255, 0.05)'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedTracks.includes(track.id),\n                onChange: () => handleTrackSelection(track.id),\n                sx: {\n                  color: '#1DB954',\n                  '&.Mui-checked': {\n                    color: '#1DB954'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    color: '#fff'\n                  },\n                  children: track.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 25\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      color: '#ccc'\n                    },\n                    children: track.artist\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `Plays ${typeof track.play_count === 'number' ? track.play_count : 0}`,\n                    size: \"small\",\n                    variant: \"outlined\",\n                    sx: {\n                      color: '#ccc',\n                      borderColor: '#555',\n                      height: 20\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                backgroundColor: 'rgba(255,255,255,0.1)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 19\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          sx: {\n            textAlign: 'center',\n            py: 4\n          },\n          children: \"No tracks available to add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setAddTracksDialogOpen(false);\n            setSelectedTracks([]);\n          },\n          sx: {\n            color: '#ccc'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddTracks,\n          variant: \"contained\",\n          disabled: selectedTracks.length === 0,\n          sx: {\n            backgroundColor: '#1DB954',\n            '&:hover': {\n              backgroundColor: '#1ed760'\n            }\n          },\n          children: [\"Add \", selectedTracks.length, \" Track\", selectedTracks.length !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error,\n      autoHideDuration: 6000,\n      onClose: () => setError(null),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(null),\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!success,\n      autoHideDuration: 4000,\n      onClose: () => setSuccess(null),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSuccess(null),\n        severity: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlists, \"1jfji1jbfvyHeX8J4+doStG3wLo=\", false, function () {\n  return [useSyncTrackCounts, usePlayer, useSyncTrackCounts];\n});\n_c = Playlists;\nexport default Playlists;\nvar _c;\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Grid","Card","CardContent","Box","Tabs","Tab","TextField","Button","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Alert","Snackbar","Chip","List","ListItem","ListItemText","ListItemSecondaryAction","Checkbox","Divider","Add","PlayArrow","Delete","Favorite","FavoriteBorder","MoreVert","Share","MusicNote","axios","usePlayer","AudioPlayer","useSyncTrackCounts","jsxDEV","_jsxDEV","defaults","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","Playlists","_s","_selectedPlaylist$tra","_selectedPlaylist$tra2","_selectedPlaylist$tra3","playlists","setPlaylists","selectedPlaylist","setSelectedPlaylist","availableTracks","setAvailableTracks","syncedAvailableTracks","setSyncedAvailableTracks","loading","setLoading","createDialogOpen","setCreateDialogOpen","addTracksDialogOpen","setAddTracksDialogOpen","selectedTracks","setSelectedTracks","error","setError","success","setSuccess","newPlaylist","setNewPlaylist","name","description","is_public","playTrack","syncedPlaylistTracks","setSyncedPlaylistTracks","fetchPlaylists","fetchAvailableTracks","response","get","list","data","tracks","console","length","fetchPlaylistTracks","id","playlistId","_response$data$playli","playlist","handleCreatePlaylist","post","handleAddTracks","trackId","track_id","handleRemoveTrack","delete","handleTrackSelection","prev","includes","filter","handlePlayPlaylist","sx","py","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mb","display","justifyContent","alignItems","variant","gutterBottom","fontWeight","startIcon","onClick","container","spacing","item","xs","md","position","top","map","backgroundColor","cursor","color","track_count","mt","owner_username","gap","borderColor","flexDirection","track","index","onPlay","compact","showIndex","textAlign","fontSize","open","onClose","fullWidth","PaperProps","autoFocus","margin","label","value","onChange","e","target","multiline","rows","disabled","maxHeight","overflow","Fragment","borderRadius","checked","primary","title","secondary","artist","play_count","size","height","autoHideDuration","severity","_c","$RefreshReg$"],"sources":["/Users/walesolagbade/streaming_app/client/src/pages/Playlists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Box,\n  Tabs,\n  Tab,\n  TextField,\n  Button,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Alert,\n  Snackbar,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Checkbox,\n  Divider\n} from '@mui/material';\nimport { Add, PlayArrow, Delete, Favorite, FavoriteBorder, MoreVert, Share, MusicNote } from '@mui/icons-material';\nimport axios from 'axios';\nimport { usePlayer } from '../contexts/PlayerContext';\nimport AudioPlayer from '../components/AudioPlayer';\nimport useSyncTrackCounts from '../hooks/useSyncTrackCounts';\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:5002';\naxios.defaults.withCredentials = true;\n\n// Add auth token to requests\naxios.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nconst Playlists = () => {\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [availableTracks, setAvailableTracks] = useState([]);\n  const [syncedAvailableTracks, setSyncedAvailableTracks] = useSyncTrackCounts([]);\n  const [loading, setLoading] = useState(true);\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [addTracksDialogOpen, setAddTracksDialogOpen] = useState(false);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [newPlaylist, setNewPlaylist] = useState({\n    name: '',\n    description: '',\n    is_public: false\n  });\n  const { playTrack } = usePlayer();\n  const [syncedPlaylistTracks, setSyncedPlaylistTracks] = useSyncTrackCounts([]);\n\n  useEffect(() => {\n    fetchPlaylists();\n    fetchAvailableTracks();\n  }, []);\n\n  const fetchAvailableTracks = async () => {\n    try {\n      const response = await axios.get('/api/tracks');\n  const list = response.data.tracks || [];\n  setAvailableTracks(list);\n  setSyncedAvailableTracks(list);\n    } catch (error) {\n      console.error('Error fetching tracks:', error);\n    }\n  };\n\n  const fetchPlaylists = async () => {\n    try {\n      const response = await axios.get('/api/playlists');\n      setPlaylists(response.data.playlists || []);\n      if (response.data.playlists && response.data.playlists.length > 0) {\n        setSelectedPlaylist(response.data.playlists[0]);\n        fetchPlaylistTracks(response.data.playlists[0].id);\n      }\n    } catch (error) {\n      console.error('Error fetching playlists:', error);\n      setError('Failed to load playlists. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPlaylistTracks = async (playlistId) => {\n    try {\n      const response = await axios.get(`/api/playlists/${playlistId}`);\n  setSelectedPlaylist(response.data.playlist);\n  setSyncedPlaylistTracks(response.data.playlist?.tracks || []);\n    } catch (error) {\n      console.error('Error fetching playlist tracks:', error);\n    }\n  };\n\n  const handleCreatePlaylist = async () => {\n    if (!newPlaylist.name) return;\n\n    try {\n      await axios.post('/api/playlists', newPlaylist);\n      setCreateDialogOpen(false);\n      setNewPlaylist({\n        name: '',\n        description: '',\n        is_public: false\n      });\n      setSuccess('Playlist created successfully!');\n      fetchPlaylists();\n    } catch (error) {\n      console.error('Error creating playlist:', error);\n      setError('Failed to create playlist. Please try again.');\n    }\n  };\n\n  const handleAddTracks = async () => {\n    if (!selectedPlaylist || selectedTracks.length === 0) return;\n\n    try {\n      // Add each selected track to the playlist\n      for (const trackId of selectedTracks) {\n        await axios.post(`/api/playlists/${selectedPlaylist.id}/tracks`, {\n          track_id: trackId\n        });\n      }\n      \n      setAddTracksDialogOpen(false);\n      setSelectedTracks([]);\n      setSuccess(`Added ${selectedTracks.length} track(s) to playlist!`);\n      fetchPlaylistTracks(selectedPlaylist.id);\n    } catch (error) {\n      console.error('Error adding tracks to playlist:', error);\n      setError('Failed to add tracks to playlist. Please try again.');\n    }\n  };\n\n  const handleRemoveTrack = async (trackId) => {\n    if (!selectedPlaylist) return;\n\n    try {\n      await axios.delete(`/api/playlists/${selectedPlaylist.id}/tracks/${trackId}`);\n      setSuccess('Track removed from playlist!');\n      fetchPlaylistTracks(selectedPlaylist.id);\n    } catch (error) {\n      console.error('Error removing track from playlist:', error);\n      setError('Failed to remove track. Please try again.');\n    }\n  };\n\n  const handleTrackSelection = (trackId) => {\n    setSelectedTracks(prev => \n      prev.includes(trackId) \n        ? prev.filter(id => id !== trackId)\n        : [...prev, trackId]\n    );\n  };\n\n  const handlePlayPlaylist = () => {\n    if (syncedPlaylistTracks?.length > 0) {\n      playTrack(syncedPlaylistTracks[0], syncedPlaylistTracks);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container sx={{ py: 4 }}>\n        <Typography>Loading playlists...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4, mb: 10 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold' }}>\n          My Playlists\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<Add />}\n          onClick={() => setCreateDialogOpen(true)}\n        >\n          Create Playlist\n        </Button>\n      </Box>\n\n      {playlists.length > 0 ? (\n        <Grid container spacing={3}>\n          {/* Playlist List */}\n          <Grid item xs={12} md={4}>\n            <Box sx={{ position: 'sticky', top: 20 }}>\n              {playlists.map((playlist) => (\n                <Card\n                  key={playlist.id}\n                  sx={{\n                    mb: 2,\n                    backgroundColor: selectedPlaylist?.id === playlist.id ? '#2a2a2a' : '#1e1e1e',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#2a2a2a'\n                    }\n                  }}\n                  onClick={() => fetchPlaylistTracks(playlist.id)}\n                >\n                  <CardContent>\n                    <Typography variant=\"h6\" sx={{ color: '#fff' }}>{playlist.name}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {playlist.track_count || 0} tracks\n                    </Typography>\n                    {playlist.description && (\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                        {playlist.description}\n                      </Typography>\n                    )}\n                  </CardContent>\n                </Card>\n              ))}\n            </Box>\n          </Grid>\n\n          {/* Playlist Details */}\n          <Grid item xs={12} md={8}>\n            {selectedPlaylist ? (\n              <Card sx={{ backgroundColor: '#1e1e1e' }}>\n                <CardContent>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start', mb: 3 }}>\n                    <Box>\n                      <Typography variant=\"h5\" gutterBottom sx={{ color: '#fff' }}>\n                        {selectedPlaylist.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {selectedPlaylist.tracks?.length || 0} tracks • by {selectedPlaylist.owner_username}\n                      </Typography>\n                      {selectedPlaylist.description && (\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                          {selectedPlaylist.description}\n                        </Typography>\n                      )}\n                    </Box>\n                    \n                    <Box sx={{ display: 'flex', gap: 1 }}>\n                      <Button\n                        variant=\"outlined\"\n                        startIcon={<Add />}\n                        onClick={() => setAddTracksDialogOpen(true)}\n                        sx={{\n                          borderColor: '#1DB954',\n                          color: '#1DB954',\n                          '&:hover': {\n                            borderColor: '#1ed760',\n                            color: '#1ed760'\n                          }\n                        }}\n                      >\n                        Add Tracks\n                      </Button>\n                      {selectedPlaylist.tracks?.length > 0 && (\n                        <Button\n                          variant=\"contained\"\n                          startIcon={<PlayArrow />}\n                          onClick={handlePlayPlaylist}\n                          sx={{\n                            backgroundColor: '#1DB954',\n                            '&:hover': {\n                              backgroundColor: '#1ed760'\n                            }\n                          }}\n                        >\n                          Play All\n                        </Button>\n                      )}\n                    </Box>\n                  </Box>\n\n                  {/* Track List */}\n                  {selectedPlaylist.tracks?.length > 0 ? (\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            {syncedPlaylistTracks.map((track, index) => (\n                        <AudioPlayer \n                          key={track.id} \n                          track={track} \n              onPlay={(track) => playTrack(track, syncedPlaylistTracks)}\n                          compact={true}\n                          showIndex={index + 1}\n                        />\n                      ))}\n                    </Box>\n                  ) : (\n                    <Box sx={{ textAlign: 'center', py: 4 }}>\n                      <MusicNote sx={{ fontSize: 60, color: 'text.secondary', mb: 2 }} />\n                      <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                        This playlist is empty\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                        Add some tracks to get started\n                      </Typography>\n                      <Button\n                        variant=\"contained\"\n                        startIcon={<Add />}\n                        onClick={() => setAddTracksDialogOpen(true)}\n                        sx={{\n                          backgroundColor: '#1DB954',\n                          '&:hover': {\n                            backgroundColor: '#1ed760'\n                          }\n                        }}\n                      >\n                        Add Tracks\n                      </Button>\n                    </Box>\n                  )}\n                </CardContent>\n              </Card>\n            ) : (\n              <Card sx={{ backgroundColor: '#1e1e1e' }}>\n                <CardContent>\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\n                    Select a playlist to view its tracks\n                  </Typography>\n                </CardContent>\n              </Card>\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <Box sx={{ textAlign: 'center', py: 8 }}>\n          <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n            No playlists yet\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Create your first playlist to organize your favorite tracks\n          </Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            onClick={() => setCreateDialogOpen(true)}\n            sx={{ mt: 2 }}\n          >\n            Create Playlist\n          </Button>\n        </Box>\n      )}\n\n      {/* Create Playlist Dialog */}\n      <Dialog \n        open={createDialogOpen} \n        onClose={() => setCreateDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n        PaperProps={{\n          sx: {\n            backgroundColor: '#2a2a2a',\n            color: '#fff'\n          }\n        }}\n      >\n        <DialogTitle sx={{ color: '#fff' }}>Create New Playlist</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Playlist Name\"\n            fullWidth\n            variant=\"outlined\"\n            value={newPlaylist.name}\n            onChange={(e) => setNewPlaylist({ ...newPlaylist, name: e.target.value })}\n            sx={{ \n              mb: 2,\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': { borderColor: 'rgba(255,255,255,0.3)' },\n                '&:hover fieldset': { borderColor: 'rgba(255,255,255,0.5)' },\n                '&.Mui-focused fieldset': { borderColor: '#1DB954' },\n              },\n              '& .MuiInputBase-input': { color: '#fff' },\n              '& .MuiInputLabel-root': { color: 'rgba(255,255,255,0.7)' }\n            }}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Description (optional)\"\n            fullWidth\n            multiline\n            rows={3}\n            variant=\"outlined\"\n            value={newPlaylist.description}\n            onChange={(e) => setNewPlaylist({ ...newPlaylist, description: e.target.value })}\n            sx={{\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': { borderColor: 'rgba(255,255,255,0.3)' },\n                '&:hover fieldset': { borderColor: 'rgba(255,255,255,0.5)' },\n                '&.Mui-focused fieldset': { borderColor: '#1DB954' },\n              },\n              '& .MuiInputBase-input': { color: '#fff' },\n              '& .MuiInputLabel-root': { color: 'rgba(255,255,255,0.7)' }\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setCreateDialogOpen(false)} sx={{ color: '#ccc' }}>Cancel</Button>\n          <Button \n            onClick={handleCreatePlaylist} \n            variant=\"contained\"\n            disabled={!newPlaylist.name}\n            sx={{\n              backgroundColor: '#1DB954',\n              '&:hover': { backgroundColor: '#1ed760' }\n            }}\n          >\n            Create Playlist\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Add Tracks Dialog */}\n      <Dialog \n        open={addTracksDialogOpen} \n        onClose={() => setAddTracksDialogOpen(false)}\n        maxWidth=\"md\"\n        fullWidth\n        PaperProps={{\n          sx: {\n            backgroundColor: '#2a2a2a',\n            color: '#fff',\n            maxHeight: '80vh'\n          }\n        }}\n      >\n        <DialogTitle sx={{ color: '#fff' }}>\n          Add Tracks to \"{selectedPlaylist?.name}\"\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            Select tracks to add to your playlist\n          </Typography>\n          \n      {syncedAvailableTracks.length > 0 ? (\n            <List sx={{ maxHeight: 400, overflow: 'auto' }}>\n        {syncedAvailableTracks.map((track) => (\n                <React.Fragment key={track.id}>\n                  <ListItem\n                    sx={{\n                      borderRadius: 1,\n                      mb: 1,\n                      backgroundColor: selectedTracks.includes(track.id) ? 'rgba(29, 185, 84, 0.1)' : 'transparent',\n                      '&:hover': {\n                        backgroundColor: 'rgba(255, 255, 255, 0.05)'\n                      }\n                    }}\n                  >\n                    <Checkbox\n                      checked={selectedTracks.includes(track.id)}\n                      onChange={() => handleTrackSelection(track.id)}\n                      sx={{\n                        color: '#1DB954',\n                        '&.Mui-checked': {\n                          color: '#1DB954'\n                        }\n                      }}\n                    />\n                    <ListItemText\n                      primary={\n                        <Typography sx={{ color: '#fff' }}>\n                          {track.title}\n                        </Typography>\n                      }\n                      secondary={\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                          <Typography variant=\"body2\" sx={{ color: '#ccc' }}>\n                            {track.artist}\n                          </Typography>\n                          <Chip \n                            label={`Plays ${(typeof track.play_count === 'number' ? track.play_count : 0)}`}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            sx={{ color: '#ccc', borderColor: '#555', height: 20 }}\n                          />\n                        </Box>\n                      }\n                    />\n                  </ListItem>\n                  <Divider sx={{ backgroundColor: 'rgba(255,255,255,0.1)' }} />\n                </React.Fragment>\n              ))}\n            </List>\n          ) : (\n            <Typography color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\n              No tracks available to add\n            </Typography>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => {\n              setAddTracksDialogOpen(false);\n              setSelectedTracks([]);\n            }} \n            sx={{ color: '#ccc' }}\n          >\n            Cancel\n          </Button>\n          <Button \n            onClick={handleAddTracks} \n            variant=\"contained\"\n            disabled={selectedTracks.length === 0}\n            sx={{\n              backgroundColor: '#1DB954',\n              '&:hover': { backgroundColor: '#1ed760' }\n            }}\n          >\n            Add {selectedTracks.length} Track{selectedTracks.length !== 1 ? 's' : ''}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Success/Error Snackbars */}\n      <Snackbar\n        open={!!error}\n        autoHideDuration={6000}\n        onClose={() => setError(null)}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n      \n      <Snackbar\n        open={!!success}\n        autoHideDuration={4000}\n        onClose={() => setSuccess(null)}\n      >\n        <Alert onClose={() => setSuccess(null)} severity=\"success\">\n          {success}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default Playlists;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,GAAG,EACHC,IAAI,EACJC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,UAAU,EACVC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,KAAK,EACLC,QAAQ,EACRC,IAAI,EACJC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,EACvBC,QAAQ,EACRC,OAAO,QACF,eAAe;AACtB,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,QAAQ,qBAAqB;AAClH,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,2BAA2B;AACrD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,kBAAkB,MAAM,6BAA6B;;AAE5D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAL,KAAK,CAACM,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAChDP,KAAK,CAACM,QAAQ,CAACE,eAAe,GAAG,IAAI;;AAErC;AACAR,KAAK,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,MAAMM,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5D,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC6D,eAAe,EAAEC,kBAAkB,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC+D,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG3B,kBAAkB,CAAC,EAAE,CAAC;EAChF,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAGlE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACqE,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtE,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACuE,cAAc,EAAEC,iBAAiB,CAAC,GAAGxE,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACyE,KAAK,EAAEC,QAAQ,CAAC,GAAG1E,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2E,OAAO,EAAEC,UAAU,CAAC,GAAG5E,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC6E,WAAW,EAAEC,cAAc,CAAC,GAAG9E,QAAQ,CAAC;IAC7C+E,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM;IAAEC;EAAU,CAAC,GAAG/C,SAAS,CAAC,CAAC;EACjC,MAAM,CAACgD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG/C,kBAAkB,CAAC,EAAE,CAAC;EAE9EpC,SAAS,CAAC,MAAM;IACdoF,cAAc,CAAC,CAAC;IAChBC,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,GAAG,CAAC,aAAa,CAAC;MACnD,MAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,IAAI,EAAE;MACvC7B,kBAAkB,CAAC2B,IAAI,CAAC;MACxBzB,wBAAwB,CAACyB,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,GAAG,CAAC,gBAAgB,CAAC;MAClD9B,YAAY,CAAC6B,QAAQ,CAACG,IAAI,CAACjC,SAAS,IAAI,EAAE,CAAC;MAC3C,IAAI8B,QAAQ,CAACG,IAAI,CAACjC,SAAS,IAAI8B,QAAQ,CAACG,IAAI,CAACjC,SAAS,CAACoC,MAAM,GAAG,CAAC,EAAE;QACjEjC,mBAAmB,CAAC2B,QAAQ,CAACG,IAAI,CAACjC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC/CqC,mBAAmB,CAACP,QAAQ,CAACG,IAAI,CAACjC,SAAS,CAAC,CAAC,CAAC,CAACsC,EAAE,CAAC;MACpD;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDC,QAAQ,CAAC,6CAA6C,CAAC;IACzD,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4B,mBAAmB,GAAG,MAAOE,UAAU,IAAK;IAChD,IAAI;MAAA,IAAAC,qBAAA;MACF,MAAMV,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,GAAG,CAAC,kBAAkBQ,UAAU,EAAE,CAAC;MACpEpC,mBAAmB,CAAC2B,QAAQ,CAACG,IAAI,CAACQ,QAAQ,CAAC;MAC3Cd,uBAAuB,CAAC,EAAAa,qBAAA,GAAAV,QAAQ,CAACG,IAAI,CAACQ,QAAQ,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBN,MAAM,KAAI,EAAE,CAAC;IAC3D,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAM0B,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAACtB,WAAW,CAACE,IAAI,EAAE;IAEvB,IAAI;MACF,MAAM7C,KAAK,CAACkE,IAAI,CAAC,gBAAgB,EAAEvB,WAAW,CAAC;MAC/CT,mBAAmB,CAAC,KAAK,CAAC;MAC1BU,cAAc,CAAC;QACbC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC,CAAC;MACFL,UAAU,CAAC,gCAAgC,CAAC;MAC5CS,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,8CAA8C,CAAC;IAC1D;EACF,CAAC;EAED,MAAM2B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAC1C,gBAAgB,IAAIY,cAAc,CAACsB,MAAM,KAAK,CAAC,EAAE;IAEtD,IAAI;MACF;MACA,KAAK,MAAMS,OAAO,IAAI/B,cAAc,EAAE;QACpC,MAAMrC,KAAK,CAACkE,IAAI,CAAC,kBAAkBzC,gBAAgB,CAACoC,EAAE,SAAS,EAAE;UAC/DQ,QAAQ,EAAED;QACZ,CAAC,CAAC;MACJ;MAEAhC,sBAAsB,CAAC,KAAK,CAAC;MAC7BE,iBAAiB,CAAC,EAAE,CAAC;MACrBI,UAAU,CAAC,SAASL,cAAc,CAACsB,MAAM,wBAAwB,CAAC;MAClEC,mBAAmB,CAACnC,gBAAgB,CAACoC,EAAE,CAAC;IAC1C,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDC,QAAQ,CAAC,qDAAqD,CAAC;IACjE;EACF,CAAC;EAED,MAAM8B,iBAAiB,GAAG,MAAOF,OAAO,IAAK;IAC3C,IAAI,CAAC3C,gBAAgB,EAAE;IAEvB,IAAI;MACF,MAAMzB,KAAK,CAACuE,MAAM,CAAC,kBAAkB9C,gBAAgB,CAACoC,EAAE,WAAWO,OAAO,EAAE,CAAC;MAC7E1B,UAAU,CAAC,8BAA8B,CAAC;MAC1CkB,mBAAmB,CAACnC,gBAAgB,CAACoC,EAAE,CAAC;IAC1C,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DC,QAAQ,CAAC,2CAA2C,CAAC;IACvD;EACF,CAAC;EAED,MAAMgC,oBAAoB,GAAIJ,OAAO,IAAK;IACxC9B,iBAAiB,CAACmC,IAAI,IACpBA,IAAI,CAACC,QAAQ,CAACN,OAAO,CAAC,GAClBK,IAAI,CAACE,MAAM,CAACd,EAAE,IAAIA,EAAE,KAAKO,OAAO,CAAC,GACjC,CAAC,GAAGK,IAAI,EAAEL,OAAO,CACvB,CAAC;EACH,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAAA3B,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEU,MAAM,IAAG,CAAC,EAAE;MACpCX,SAAS,CAACC,oBAAoB,CAAC,CAAC,CAAC,EAAEA,oBAAoB,CAAC;IAC1D;EACF,CAAC;EAED,IAAIlB,OAAO,EAAE;IACX,oBACE1B,OAAA,CAACrC,SAAS;MAAC6G,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,eACvB1E,OAAA,CAACpC,UAAU;QAAA8G,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAEhB;EAEA,oBACE9E,OAAA,CAACrC,SAAS;IAACoH,QAAQ,EAAC,IAAI;IAACP,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEO,EAAE,EAAE;IAAG,CAAE;IAAAN,QAAA,gBAC7C1E,OAAA,CAAChC,GAAG;MAACwG,EAAE,EAAE;QAAES,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAEH,EAAE,EAAE;MAAE,CAAE;MAAAN,QAAA,gBACzF1E,OAAA,CAACpC,UAAU;QAACwH,OAAO,EAAC,IAAI;QAACC,YAAY;QAACb,EAAE,EAAE;UAAEc,UAAU,EAAE;QAAO,CAAE;QAAAZ,QAAA,EAAC;MAElE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb9E,OAAA,CAAC5B,MAAM;QACLgH,OAAO,EAAC,WAAW;QACnBG,SAAS,eAAEvF,OAAA,CAACb,GAAG;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACnBU,OAAO,EAAEA,CAAA,KAAM3D,mBAAmB,CAAC,IAAI,CAAE;QAAA6C,QAAA,EAC1C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL5D,SAAS,CAACoC,MAAM,GAAG,CAAC,gBACnBtD,OAAA,CAACnC,IAAI;MAAC4H,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAhB,QAAA,gBAEzB1E,OAAA,CAACnC,IAAI;QAAC8H,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAnB,QAAA,eACvB1E,OAAA,CAAChC,GAAG;UAACwG,EAAE,EAAE;YAAEsB,QAAQ,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAG,CAAE;UAAArB,QAAA,EACtCxD,SAAS,CAAC8E,GAAG,CAAErC,QAAQ,iBACtB3D,OAAA,CAAClC,IAAI;YAEH0G,EAAE,EAAE;cACFQ,EAAE,EAAE,CAAC;cACLiB,eAAe,EAAE,CAAA7E,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEoC,EAAE,MAAKG,QAAQ,CAACH,EAAE,GAAG,SAAS,GAAG,SAAS;cAC7E0C,MAAM,EAAE,SAAS;cACjB,SAAS,EAAE;gBACTD,eAAe,EAAE;cACnB;YACF,CAAE;YACFT,OAAO,EAAEA,CAAA,KAAMjC,mBAAmB,CAACI,QAAQ,CAACH,EAAE,CAAE;YAAAkB,QAAA,eAEhD1E,OAAA,CAACjC,WAAW;cAAA2G,QAAA,gBACV1E,OAAA,CAACpC,UAAU;gBAACwH,OAAO,EAAC,IAAI;gBAACZ,EAAE,EAAE;kBAAE2B,KAAK,EAAE;gBAAO,CAAE;gBAAAzB,QAAA,EAAEf,QAAQ,CAACnB;cAAI;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eAC5E9E,OAAA,CAACpC,UAAU;gBAACwH,OAAO,EAAC,OAAO;gBAACe,KAAK,EAAC,gBAAgB;gBAAAzB,QAAA,GAC/Cf,QAAQ,CAACyC,WAAW,IAAI,CAAC,EAAC,SAC7B;cAAA;gBAAAzB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,EACZnB,QAAQ,CAAClB,WAAW,iBACnBzC,OAAA,CAACpC,UAAU;gBAACwH,OAAO,EAAC,OAAO;gBAACe,KAAK,EAAC,gBAAgB;gBAAC3B,EAAE,EAAE;kBAAE6B,EAAE,EAAE;gBAAE,CAAE;gBAAA3B,QAAA,EAC9Df,QAAQ,CAAClB;cAAW;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CACb;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACU;UAAC,GArBTnB,QAAQ,CAACH,EAAE;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBZ,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGP9E,OAAA,CAACnC,IAAI;QAAC8H,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAnB,QAAA,EACtBtD,gBAAgB,gBACfpB,OAAA,CAAClC,IAAI;UAAC0G,EAAE,EAAE;YAAEyB,eAAe,EAAE;UAAU,CAAE;UAAAvB,QAAA,eACvC1E,OAAA,CAACjC,WAAW;YAAA2G,QAAA,gBACV1E,OAAA,CAAChC,GAAG;cAACwG,EAAE,EAAE;gBAAES,OAAO,EAAE,MAAM;gBAAEC,cAAc,EAAE,eAAe;gBAAEC,UAAU,EAAE,OAAO;gBAAEH,EAAE,EAAE;cAAE,CAAE;cAAAN,QAAA,gBACxF1E,OAAA,CAAChC,GAAG;gBAAA0G,QAAA,gBACF1E,OAAA,CAACpC,UAAU;kBAACwH,OAAO,EAAC,IAAI;kBAACC,YAAY;kBAACb,EAAE,EAAE;oBAAE2B,KAAK,EAAE;kBAAO,CAAE;kBAAAzB,QAAA,EACzDtD,gBAAgB,CAACoB;gBAAI;kBAAAmC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ,CAAC,eACb9E,OAAA,CAACpC,UAAU;kBAACwH,OAAO,EAAC,OAAO;kBAACe,KAAK,EAAC,gBAAgB;kBAAAzB,QAAA,GAC/C,EAAA3D,qBAAA,GAAAK,gBAAgB,CAACgC,MAAM,cAAArC,qBAAA,uBAAvBA,qBAAA,CAAyBuC,MAAM,KAAI,CAAC,EAAC,oBAAa,EAAClC,gBAAgB,CAACkF,cAAc;gBAAA;kBAAA3B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzE,CAAC,EACZ1D,gBAAgB,CAACqB,WAAW,iBAC3BzC,OAAA,CAACpC,UAAU;kBAACwH,OAAO,EAAC,OAAO;kBAACe,KAAK,EAAC,gBAAgB;kBAAC3B,EAAE,EAAE;oBAAE6B,EAAE,EAAE;kBAAE,CAAE;kBAAA3B,QAAA,EAC9DtD,gBAAgB,CAACqB;gBAAW;kBAAAkC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CACb;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eAEN9E,OAAA,CAAChC,GAAG;gBAACwG,EAAE,EAAE;kBAAES,OAAO,EAAE,MAAM;kBAAEsB,GAAG,EAAE;gBAAE,CAAE;gBAAA7B,QAAA,gBACnC1E,OAAA,CAAC5B,MAAM;kBACLgH,OAAO,EAAC,UAAU;kBAClBG,SAAS,eAAEvF,OAAA,CAACb,GAAG;oBAAAwF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAE;kBACnBU,OAAO,EAAEA,CAAA,KAAMzD,sBAAsB,CAAC,IAAI,CAAE;kBAC5CyC,EAAE,EAAE;oBACFgC,WAAW,EAAE,SAAS;oBACtBL,KAAK,EAAE,SAAS;oBAChB,SAAS,EAAE;sBACTK,WAAW,EAAE,SAAS;sBACtBL,KAAK,EAAE;oBACT;kBACF,CAAE;kBAAAzB,QAAA,EACH;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACR,EAAA9D,sBAAA,GAAAI,gBAAgB,CAACgC,MAAM,cAAApC,sBAAA,uBAAvBA,sBAAA,CAAyBsC,MAAM,IAAG,CAAC,iBAClCtD,OAAA,CAAC5B,MAAM;kBACLgH,OAAO,EAAC,WAAW;kBACnBG,SAAS,eAAEvF,OAAA,CAACZ,SAAS;oBAAAuF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAE;kBACzBU,OAAO,EAAEjB,kBAAmB;kBAC5BC,EAAE,EAAE;oBACFyB,eAAe,EAAE,SAAS;oBAC1B,SAAS,EAAE;sBACTA,eAAe,EAAE;oBACnB;kBACF,CAAE;kBAAAvB,QAAA,EACH;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CACT;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EAGL,EAAA7D,sBAAA,GAAAG,gBAAgB,CAACgC,MAAM,cAAAnC,sBAAA,uBAAvBA,sBAAA,CAAyBqC,MAAM,IAAG,CAAC,gBAClCtD,OAAA,CAAChC,GAAG;cAACwG,EAAE,EAAE;gBAAES,OAAO,EAAE,MAAM;gBAAEwB,aAAa,EAAE,QAAQ;gBAAEF,GAAG,EAAE;cAAE,CAAE;cAAA7B,QAAA,EACrE9B,oBAAoB,CAACoD,GAAG,CAAC,CAACU,KAAK,EAAEC,KAAK,kBAC3B3G,OAAA,CAACH,WAAW;gBAEV6G,KAAK,EAAEA,KAAM;gBACzBE,MAAM,EAAGF,KAAK,IAAK/D,SAAS,CAAC+D,KAAK,EAAE9D,oBAAoB,CAAE;gBAC9CiE,OAAO,EAAE,IAAK;gBACdC,SAAS,EAAEH,KAAK,GAAG;cAAE,GAJhBD,KAAK,CAAClD,EAAE;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKd,CACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,gBAEN9E,OAAA,CAAChC,GAAG;cAACwG,EAAE,EAAE;gBAAEuC,SAAS,EAAE,QAAQ;gBAAEtC,EAAE,EAAE;cAAE,CAAE;cAAAC,QAAA,gBACtC1E,OAAA,CAACN,SAAS;gBAAC8E,EAAE,EAAE;kBAAEwC,QAAQ,EAAE,EAAE;kBAAEb,KAAK,EAAE,gBAAgB;kBAAEnB,EAAE,EAAE;gBAAE;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACnE9E,OAAA,CAACpC,UAAU;gBAACwH,OAAO,EAAC,OAAO;gBAACe,KAAK,EAAC,gBAAgB;gBAACd,YAAY;gBAAAX,QAAA,EAAC;cAEhE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACb9E,OAAA,CAACpC,UAAU;gBAACwH,OAAO,EAAC,OAAO;gBAACe,KAAK,EAAC,gBAAgB;gBAAC3B,EAAE,EAAE;kBAAEQ,EAAE,EAAE;gBAAE,CAAE;gBAAAN,QAAA,EAAC;cAElE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACb9E,OAAA,CAAC5B,MAAM;gBACLgH,OAAO,EAAC,WAAW;gBACnBG,SAAS,eAAEvF,OAAA,CAACb,GAAG;kBAAAwF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACnBU,OAAO,EAAEA,CAAA,KAAMzD,sBAAsB,CAAC,IAAI,CAAE;gBAC5CyC,EAAE,EAAE;kBACFyB,eAAe,EAAE,SAAS;kBAC1B,SAAS,EAAE;oBACTA,eAAe,EAAE;kBACnB;gBACF,CAAE;gBAAAvB,QAAA,EACH;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,gBAEP9E,OAAA,CAAClC,IAAI;UAAC0G,EAAE,EAAE;YAAEyB,eAAe,EAAE;UAAU,CAAE;UAAAvB,QAAA,eACvC1E,OAAA,CAACjC,WAAW;YAAA2G,QAAA,eACV1E,OAAA,CAACpC,UAAU;cAACwH,OAAO,EAAC,OAAO;cAACe,KAAK,EAAC,gBAAgB;cAAC3B,EAAE,EAAE;gBAAEuC,SAAS,EAAE,QAAQ;gBAAEtC,EAAE,EAAE;cAAE,CAAE;cAAAC,QAAA,EAAC;YAEvF;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEP9E,OAAA,CAAChC,GAAG;MAACwG,EAAE,EAAE;QAAEuC,SAAS,EAAE,QAAQ;QAAEtC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACtC1E,OAAA,CAACpC,UAAU;QAACwH,OAAO,EAAC,IAAI;QAACe,KAAK,EAAC,gBAAgB;QAACd,YAAY;QAAAX,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb9E,OAAA,CAACpC,UAAU;QAACwH,OAAO,EAAC,OAAO;QAACe,KAAK,EAAC,gBAAgB;QAAAzB,QAAA,EAAC;MAEnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb9E,OAAA,CAAC5B,MAAM;QACLgH,OAAO,EAAC,WAAW;QACnBG,SAAS,eAAEvF,OAAA,CAACb,GAAG;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACnBU,OAAO,EAAEA,CAAA,KAAM3D,mBAAmB,CAAC,IAAI,CAAE;QACzC2C,EAAE,EAAE;UAAE6B,EAAE,EAAE;QAAE,CAAE;QAAA3B,QAAA,EACf;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAGD9E,OAAA,CAAC1B,MAAM;MACL2I,IAAI,EAAErF,gBAAiB;MACvBsF,OAAO,EAAEA,CAAA,KAAMrF,mBAAmB,CAAC,KAAK,CAAE;MAC1CkD,QAAQ,EAAC,IAAI;MACboC,SAAS;MACTC,UAAU,EAAE;QACV5C,EAAE,EAAE;UACFyB,eAAe,EAAE,SAAS;UAC1BE,KAAK,EAAE;QACT;MACF,CAAE;MAAAzB,QAAA,gBAEF1E,OAAA,CAACzB,WAAW;QAACiG,EAAE,EAAE;UAAE2B,KAAK,EAAE;QAAO,CAAE;QAAAzB,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACrE9E,OAAA,CAACxB,aAAa;QAAAkG,QAAA,gBACZ1E,OAAA,CAAC7B,SAAS;UACRkJ,SAAS;UACTC,MAAM,EAAC,OAAO;UACdC,KAAK,EAAC,eAAe;UACrBJ,SAAS;UACT/B,OAAO,EAAC,UAAU;UAClBoC,KAAK,EAAElF,WAAW,CAACE,IAAK;UACxBiF,QAAQ,EAAGC,CAAC,IAAKnF,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEE,IAAI,EAAEkF,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAC1EhD,EAAE,EAAE;YACFQ,EAAE,EAAE,CAAC;YACL,0BAA0B,EAAE;cAC1B,YAAY,EAAE;gBAAEwB,WAAW,EAAE;cAAwB,CAAC;cACtD,kBAAkB,EAAE;gBAAEA,WAAW,EAAE;cAAwB,CAAC;cAC5D,wBAAwB,EAAE;gBAAEA,WAAW,EAAE;cAAU;YACrD,CAAC;YACD,uBAAuB,EAAE;cAAEL,KAAK,EAAE;YAAO,CAAC;YAC1C,uBAAuB,EAAE;cAAEA,KAAK,EAAE;YAAwB;UAC5D;QAAE;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACF9E,OAAA,CAAC7B,SAAS;UACRmJ,MAAM,EAAC,OAAO;UACdC,KAAK,EAAC,wBAAwB;UAC9BJ,SAAS;UACTS,SAAS;UACTC,IAAI,EAAE,CAAE;UACRzC,OAAO,EAAC,UAAU;UAClBoC,KAAK,EAAElF,WAAW,CAACG,WAAY;UAC/BgF,QAAQ,EAAGC,CAAC,IAAKnF,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEG,WAAW,EAAEiF,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UACjFhD,EAAE,EAAE;YACF,0BAA0B,EAAE;cAC1B,YAAY,EAAE;gBAAEgC,WAAW,EAAE;cAAwB,CAAC;cACtD,kBAAkB,EAAE;gBAAEA,WAAW,EAAE;cAAwB,CAAC;cAC5D,wBAAwB,EAAE;gBAAEA,WAAW,EAAE;cAAU;YACrD,CAAC;YACD,uBAAuB,EAAE;cAAEL,KAAK,EAAE;YAAO,CAAC;YAC1C,uBAAuB,EAAE;cAAEA,KAAK,EAAE;YAAwB;UAC5D;QAAE;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,eAChB9E,OAAA,CAACvB,aAAa;QAAAiG,QAAA,gBACZ1E,OAAA,CAAC5B,MAAM;UAACoH,OAAO,EAAEA,CAAA,KAAM3D,mBAAmB,CAAC,KAAK,CAAE;UAAC2C,EAAE,EAAE;YAAE2B,KAAK,EAAE;UAAO,CAAE;UAAAzB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzF9E,OAAA,CAAC5B,MAAM;UACLoH,OAAO,EAAE5B,oBAAqB;UAC9BwB,OAAO,EAAC,WAAW;UACnB0C,QAAQ,EAAE,CAACxF,WAAW,CAACE,IAAK;UAC5BgC,EAAE,EAAE;YACFyB,eAAe,EAAE,SAAS;YAC1B,SAAS,EAAE;cAAEA,eAAe,EAAE;YAAU;UAC1C,CAAE;UAAAvB,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGT9E,OAAA,CAAC1B,MAAM;MACL2I,IAAI,EAAEnF,mBAAoB;MAC1BoF,OAAO,EAAEA,CAAA,KAAMnF,sBAAsB,CAAC,KAAK,CAAE;MAC7CgD,QAAQ,EAAC,IAAI;MACboC,SAAS;MACTC,UAAU,EAAE;QACV5C,EAAE,EAAE;UACFyB,eAAe,EAAE,SAAS;UAC1BE,KAAK,EAAE,MAAM;UACb4B,SAAS,EAAE;QACb;MACF,CAAE;MAAArD,QAAA,gBAEF1E,OAAA,CAACzB,WAAW;QAACiG,EAAE,EAAE;UAAE2B,KAAK,EAAE;QAAO,CAAE;QAAAzB,QAAA,GAAC,kBACnB,EAACtD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEoB,IAAI,EAAC,IACzC;MAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACd9E,OAAA,CAACxB,aAAa;QAAAkG,QAAA,gBACZ1E,OAAA,CAACpC,UAAU;UAACwH,OAAO,EAAC,OAAO;UAACe,KAAK,EAAC,gBAAgB;UAAC3B,EAAE,EAAE;YAAEQ,EAAE,EAAE;UAAE,CAAE;UAAAN,QAAA,EAAC;QAElE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EAEhBtD,qBAAqB,CAAC8B,MAAM,GAAG,CAAC,gBAC3BtD,OAAA,CAACnB,IAAI;UAAC2F,EAAE,EAAE;YAAEuD,SAAS,EAAE,GAAG;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAtD,QAAA,EAClDlD,qBAAqB,CAACwE,GAAG,CAAEU,KAAK,iBACzB1G,OAAA,CAACxC,KAAK,CAACyK,QAAQ;YAAAvD,QAAA,gBACb1E,OAAA,CAAClB,QAAQ;cACP0F,EAAE,EAAE;gBACF0D,YAAY,EAAE,CAAC;gBACflD,EAAE,EAAE,CAAC;gBACLiB,eAAe,EAAEjE,cAAc,CAACqC,QAAQ,CAACqC,KAAK,CAAClD,EAAE,CAAC,GAAG,wBAAwB,GAAG,aAAa;gBAC7F,SAAS,EAAE;kBACTyC,eAAe,EAAE;gBACnB;cACF,CAAE;cAAAvB,QAAA,gBAEF1E,OAAA,CAACf,QAAQ;gBACPkJ,OAAO,EAAEnG,cAAc,CAACqC,QAAQ,CAACqC,KAAK,CAAClD,EAAE,CAAE;gBAC3CiE,QAAQ,EAAEA,CAAA,KAAMtD,oBAAoB,CAACuC,KAAK,CAAClD,EAAE,CAAE;gBAC/CgB,EAAE,EAAE;kBACF2B,KAAK,EAAE,SAAS;kBAChB,eAAe,EAAE;oBACfA,KAAK,EAAE;kBACT;gBACF;cAAE;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACF9E,OAAA,CAACjB,YAAY;gBACXqJ,OAAO,eACLpI,OAAA,CAACpC,UAAU;kBAAC4G,EAAE,EAAE;oBAAE2B,KAAK,EAAE;kBAAO,CAAE;kBAAAzB,QAAA,EAC/BgC,KAAK,CAAC2B;gBAAK;kBAAA1D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CACb;gBACDwD,SAAS,eACPtI,OAAA,CAAChC,GAAG;kBAACwG,EAAE,EAAE;oBAAES,OAAO,EAAE,MAAM;oBAAEE,UAAU,EAAE,QAAQ;oBAAEoB,GAAG,EAAE;kBAAE,CAAE;kBAAA7B,QAAA,gBACzD1E,OAAA,CAACpC,UAAU;oBAACwH,OAAO,EAAC,OAAO;oBAACZ,EAAE,EAAE;sBAAE2B,KAAK,EAAE;oBAAO,CAAE;oBAAAzB,QAAA,EAC/CgC,KAAK,CAAC6B;kBAAM;oBAAA5D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACb9E,OAAA,CAACpB,IAAI;oBACH2I,KAAK,EAAE,SAAU,OAAOb,KAAK,CAAC8B,UAAU,KAAK,QAAQ,GAAG9B,KAAK,CAAC8B,UAAU,GAAG,CAAC,EAAI;oBAChFC,IAAI,EAAC,OAAO;oBACZrD,OAAO,EAAC,UAAU;oBAClBZ,EAAE,EAAE;sBAAE2B,KAAK,EAAE,MAAM;sBAAEK,WAAW,EAAE,MAAM;sBAAEkC,MAAM,EAAE;oBAAG;kBAAE;oBAAA/D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxD,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,eACX9E,OAAA,CAACd,OAAO;cAACsF,EAAE,EAAE;gBAAEyB,eAAe,EAAE;cAAwB;YAAE;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GA1C1C4B,KAAK,CAAClD,EAAE;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA2Cb,CACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,gBAEP9E,OAAA,CAACpC,UAAU;UAACuI,KAAK,EAAC,gBAAgB;UAAC3B,EAAE,EAAE;YAAEuC,SAAS,EAAE,QAAQ;YAAEtC,EAAE,EAAE;UAAE,CAAE;UAAAC,QAAA,EAAC;QAEvE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CACb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC,eAChB9E,OAAA,CAACvB,aAAa;QAAAiG,QAAA,gBACZ1E,OAAA,CAAC5B,MAAM;UACLoH,OAAO,EAAEA,CAAA,KAAM;YACbzD,sBAAsB,CAAC,KAAK,CAAC;YAC7BE,iBAAiB,CAAC,EAAE,CAAC;UACvB,CAAE;UACFuC,EAAE,EAAE;YAAE2B,KAAK,EAAE;UAAO,CAAE;UAAAzB,QAAA,EACvB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9E,OAAA,CAAC5B,MAAM;UACLoH,OAAO,EAAE1B,eAAgB;UACzBsB,OAAO,EAAC,WAAW;UACnB0C,QAAQ,EAAE9F,cAAc,CAACsB,MAAM,KAAK,CAAE;UACtCkB,EAAE,EAAE;YACFyB,eAAe,EAAE,SAAS;YAC1B,SAAS,EAAE;cAAEA,eAAe,EAAE;YAAU;UAC1C,CAAE;UAAAvB,QAAA,GACH,MACK,EAAC1C,cAAc,CAACsB,MAAM,EAAC,QAAM,EAACtB,cAAc,CAACsB,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGT9E,OAAA,CAACrB,QAAQ;MACPsI,IAAI,EAAE,CAAC,CAAC/E,KAAM;MACdyG,gBAAgB,EAAE,IAAK;MACvBzB,OAAO,EAAEA,CAAA,KAAM/E,QAAQ,CAAC,IAAI,CAAE;MAAAuC,QAAA,eAE9B1E,OAAA,CAACtB,KAAK;QAACwI,OAAO,EAAEA,CAAA,KAAM/E,QAAQ,CAAC,IAAI,CAAE;QAACyG,QAAQ,EAAC,OAAO;QAAAlE,QAAA,EACnDxC;MAAK;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEX9E,OAAA,CAACrB,QAAQ;MACPsI,IAAI,EAAE,CAAC,CAAC7E,OAAQ;MAChBuG,gBAAgB,EAAE,IAAK;MACvBzB,OAAO,EAAEA,CAAA,KAAM7E,UAAU,CAAC,IAAI,CAAE;MAAAqC,QAAA,eAEhC1E,OAAA,CAACtB,KAAK;QAACwI,OAAO,EAAEA,CAAA,KAAM7E,UAAU,CAAC,IAAI,CAAE;QAACuG,QAAQ,EAAC,SAAS;QAAAlE,QAAA,EACvDtC;MAAO;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEhB,CAAC;AAAChE,EAAA,CArfID,SAAS;EAAA,QAI6Cf,kBAAkB,EAYtDF,SAAS,EACyBE,kBAAkB;AAAA;AAAA+I,EAAA,GAjBtEhI,SAAS;AAuff,eAAeA,SAAS;AAAC,IAAAgI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}