{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: (process.env.REACT_APP_API_URL || 'http://localhost:5001') + '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => {\n    console.log('🌐 API DEBUG: Making login request to:', `${api.defaults.baseURL}/auth/login`);\n    console.log('🌐 API DEBUG: Login payload:', {\n      email,\n      password: '***'\n    });\n    return api.post('/auth/login', {\n      email,\n      password\n    });\n  },\n  register: userData => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: userData => api.put('/auth/profile', userData)\n};\n\n// Tracks API\nexport const tracksAPI = {\n  getAll: (params = {}) => api.get('/tracks', {\n    params\n  }),\n  getById: id => api.get(`/tracks/${id}`),\n  getUserTracks: () => api.get('/tracks/user'),\n  upload: formData => api.post('/tracks', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  update: (id, data) => api.put(`/tracks/${id}`, data),\n  delete: id => api.delete(`/tracks/${id}`),\n  like: id => api.post(`/tracks/${id}/like`),\n  unlike: id => api.delete(`/tracks/${id}/like`)\n};\n\n// Playlists API\nexport const playlistsAPI = {\n  getAll: (params = {}) => api.get('/playlists', {\n    params\n  }),\n  getById: id => api.get(`/playlists/${id}`),\n  create: data => api.post('/playlists', data),\n  update: (id, data) => api.put(`/playlists/${id}`, data),\n  delete: id => api.delete(`/playlists/${id}`),\n  addTrack: (id, trackId) => api.post(`/playlists/${id}/tracks`, {\n    trackId\n  }),\n  removeTrack: (id, trackId) => api.delete(`/playlists/${id}/tracks/${trackId}`)\n};\n\n// Rooms API\nexport const roomsAPI = {\n  getAll: (params = {}) => api.get('/rooms', {\n    params\n  }),\n  getById: id => api.get(`/rooms/${id}`),\n  create: data => api.post('/rooms', data),\n  update: (id, data) => api.put(`/rooms/${id}`, data),\n  delete: (id, permanent = false) => api.delete(`/rooms/${id}`, {\n    params: {\n      permanent\n    }\n  }),\n  join: id => api.post(`/rooms/${id}/join`),\n  leave: id => api.post(`/rooms/${id}/leave`),\n  getParticipants: id => api.get(`/rooms/${id}/participants`),\n  // Room tracks management\n  getTracks: id => api.get(`/rooms/${id}/tracks`),\n  addTrack: (id, trackId) => api.post(`/rooms/${id}/tracks`, {\n    trackId\n  }),\n  removeTrack: (id, trackId) => api.delete(`/rooms/${id}/tracks/${trackId}`),\n  // Participant status update\n  updateParticipantStatus: (id, userId, status) => api.put(`/rooms/${id}/participants/${userId}`, status),\n  // Room settings management\n  getSettings: id => api.get(`/rooms/${id}/settings`),\n  updateSettings: (id, settings) => api.put(`/rooms/${id}/settings`, settings)\n};\n\n// Search API\nexport const searchAPI = {\n  global: query => api.get('/search', {\n    params: {\n      q: query\n    }\n  }),\n  tracks: query => api.get('/search/tracks', {\n    params: {\n      q: query\n    }\n  }),\n  users: query => api.get('/search/users', {\n    params: {\n      q: query\n    }\n  }),\n  rooms: query => api.get('/search/rooms', {\n    params: {\n      q: query\n    }\n  })\n};\n\n// Users API\nexport const usersAPI = {\n  getProfile: id => api.get(`/users/${id}`),\n  follow: id => api.post(`/users/${id}/follow`),\n  unfollow: id => api.delete(`/users/${id}/follow`),\n  getFollowers: id => api.get(`/users/${id}/followers`),\n  getFollowing: id => api.get(`/users/${id}/following`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","console","log","defaults","post","register","userData","logout","getProfile","get","updateProfile","put","tracksAPI","getAll","params","getById","id","getUserTracks","upload","formData","update","data","delete","like","unlike","playlistsAPI","addTrack","trackId","removeTrack","roomsAPI","permanent","join","leave","getParticipants","getTracks","updateParticipantStatus","userId","getSettings","updateSettings","settings","searchAPI","global","query","q","tracks","users","rooms","usersAPI","follow","unfollow","getFollowers","getFollowing"],"sources":["/Users/walesolagbade/streaming_app/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: (process.env.REACT_APP_API_URL || 'http://localhost:5001') + '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => {\n    console.log('🌐 API DEBUG: Making login request to:', `${api.defaults.baseURL}/auth/login`);\n    console.log('🌐 API DEBUG: Login payload:', { email, password: '***' });\n    return api.post('/auth/login', { email, password });\n  },\n  register: (userData) => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: (userData) => api.put('/auth/profile', userData),\n};\n\n// Tracks API\nexport const tracksAPI = {\n  getAll: (params = {}) => api.get('/tracks', { params }),\n  getById: (id) => api.get(`/tracks/${id}`),\n  getUserTracks: () => api.get('/tracks/user'),\n  upload: (formData) => api.post('/tracks', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  update: (id, data) => api.put(`/tracks/${id}`, data),\n  delete: (id) => api.delete(`/tracks/${id}`),\n  like: (id) => api.post(`/tracks/${id}/like`),\n  unlike: (id) => api.delete(`/tracks/${id}/like`),\n};\n\n// Playlists API\nexport const playlistsAPI = {\n  getAll: (params = {}) => api.get('/playlists', { params }),\n  getById: (id) => api.get(`/playlists/${id}`),\n  create: (data) => api.post('/playlists', data),\n  update: (id, data) => api.put(`/playlists/${id}`, data),\n  delete: (id) => api.delete(`/playlists/${id}`),\n  addTrack: (id, trackId) => api.post(`/playlists/${id}/tracks`, { trackId }),\n  removeTrack: (id, trackId) => api.delete(`/playlists/${id}/tracks/${trackId}`),\n};\n\n// Rooms API\nexport const roomsAPI = {\n  getAll: (params = {}) => api.get('/rooms', { params }),\n  getById: (id) => api.get(`/rooms/${id}`),\n  create: (data) => api.post('/rooms', data),\n  update: (id, data) => api.put(`/rooms/${id}`, data),\n  delete: (id, permanent = false) => api.delete(`/rooms/${id}`, { params: { permanent } }),\n  join: (id) => api.post(`/rooms/${id}/join`),\n  leave: (id) => api.post(`/rooms/${id}/leave`),\n  getParticipants: (id) => api.get(`/rooms/${id}/participants`),\n  // Room tracks management\n  getTracks: (id) => api.get(`/rooms/${id}/tracks`),\n  addTrack: (id, trackId) => api.post(`/rooms/${id}/tracks`, { trackId }),\n  removeTrack: (id, trackId) => api.delete(`/rooms/${id}/tracks/${trackId}`),\n  // Participant status update\n  updateParticipantStatus: (id, userId, status) => api.put(`/rooms/${id}/participants/${userId}`, status),\n  // Room settings management\n  getSettings: (id) => api.get(`/rooms/${id}/settings`),\n  updateSettings: (id, settings) => api.put(`/rooms/${id}/settings`, settings),\n};\n\n// Search API\nexport const searchAPI = {\n  global: (query) => api.get('/search', { params: { q: query } }),\n  tracks: (query) => api.get('/search/tracks', { params: { q: query } }),\n  users: (query) => api.get('/search/users', { params: { q: query } }),\n  rooms: (query) => api.get('/search/rooms', { params: { q: query } }),\n};\n\n// Users API\nexport const usersAPI = {\n  getProfile: (id) => api.get(`/users/${id}`),\n  follow: (id) => api.post(`/users/${id}/follow`),\n  unfollow: (id) => api.delete(`/users/${id}/follow`),\n  getFollowers: (id) => api.get(`/users/${id}/followers`),\n  getFollowing: (id) => api.get(`/users/${id}/following`),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}