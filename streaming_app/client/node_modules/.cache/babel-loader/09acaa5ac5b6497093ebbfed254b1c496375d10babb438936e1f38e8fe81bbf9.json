{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || window.location.origin,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: credentials => api.post('/api/auth/login', credentials),\n  register: userData => api.post('/api/auth/register', userData),\n  logout: () => {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n};\n\n// Music API calls\nexport const musicAPI = {\n  getTracks: () => api.get('/api/tracks'),\n  getPlaylists: () => api.get('/api/playlists'),\n  createPlaylist: data => api.post('/api/playlists', data),\n  uploadTrack: formData => api.post('/api/tracks/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","window","location","origin","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","href","Promise","reject","authAPI","login","credentials","post","register","userData","logout","musicAPI","getTracks","get","getPlaylists","createPlaylist","data","uploadTrack","formData"],"sources":["/Users/walesolagbade/streaming_app/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || window.location.origin,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  login: (credentials) => api.post('/api/auth/login', credentials),\n  register: (userData) => api.post('/api/auth/register', userData),\n  logout: () => {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n};\n\n// Music API calls\nexport const musicAPI = {\n  getTracks: () => api.get('/api/tracks'),\n  getPlaylists: () => api.get('/api/playlists'),\n  createPlaylist: (data) => api.post('/api/playlists', data),\n  uploadTrack: (formData) => api.post('/api/tracks/upload', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  })\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAIC,MAAM,CAACC,QAAQ,CAACC,MAAM;EAChEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAV,GAAG,CAACW,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAd,GAAG,CAACW,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCjB,MAAM,CAACC,QAAQ,CAACiB,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMO,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAK7B,GAAG,CAAC8B,IAAI,CAAC,iBAAiB,EAAED,WAAW,CAAC;EAChEE,QAAQ,EAAGC,QAAQ,IAAKhC,GAAG,CAAC8B,IAAI,CAAC,oBAAoB,EAAEE,QAAQ,CAAC;EAChEC,MAAM,EAAEA,CAAA,KAAM;IACZjB,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCjB,MAAM,CAACC,QAAQ,CAACiB,IAAI,GAAG,QAAQ;EACjC;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,QAAQ,GAAG;EACtBC,SAAS,EAAEA,CAAA,KAAMnC,GAAG,CAACoC,GAAG,CAAC,aAAa,CAAC;EACvCC,YAAY,EAAEA,CAAA,KAAMrC,GAAG,CAACoC,GAAG,CAAC,gBAAgB,CAAC;EAC7CE,cAAc,EAAGC,IAAI,IAAKvC,GAAG,CAAC8B,IAAI,CAAC,gBAAgB,EAAES,IAAI,CAAC;EAC1DC,WAAW,EAAGC,QAAQ,IAAKzC,GAAG,CAAC8B,IAAI,CAAC,oBAAoB,EAAEW,QAAQ,EAAE;IAClE/B,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC;AACH,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}