{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSlot;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _useForkRef = _interopRequireDefault(require(\"@mui/utils/useForkRef\"));\nvar _appendOwnerState = _interopRequireDefault(require(\"@mui/utils/appendOwnerState\"));\nvar _resolveComponentProps = _interopRequireDefault(require(\"@mui/utils/resolveComponentProps\"));\nvar _mergeSlotProps2 = _interopRequireDefault(require(\"@mui/utils/mergeSlotProps\"));\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nfunction useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = (0, _objectWithoutPropertiesLoose2.default)(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = (0, _objectWithoutPropertiesLoose2.default)(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = (0, _resolveComponentProps.default)(slotProps[name], ownerState);\n  const _mergeSlotProps = (0, _mergeSlotProps2.default)((0, _extends2.default)({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = (0, _objectWithoutPropertiesLoose2.default)(_mergeSlotProps.props, _excluded3);\n  const ref = (0, _useForkRef.default)(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = (0, _extends2.default)({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = (0, _appendOwnerState.default)(elementType, (0, _extends2.default)({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","useSlot","_extends2","_objectWithoutPropertiesLoose2","_useForkRef","_appendOwnerState","_resolveComponentProps","_mergeSlotProps2","_excluded","_excluded2","_excluded3","name","parameters","className","elementType","initialElementType","ownerState","externalForwardedProps","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","component","rootComponent","slots","undefined","slotProps","other","resolvedComponentsProps","_mergeSlotProps","externalSlotProps","props","slotComponent","internalRef","mergedProps","ref","slotOwnerState","finalOwnerState","LeafComponent","as","keys","forEach","propName"],"sources":["/Users/walesolagbade/streaming_app/client/node_modules/@mui/material/node/utils/useSlot.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSlot;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _useForkRef = _interopRequireDefault(require(\"@mui/utils/useForkRef\"));\nvar _appendOwnerState = _interopRequireDefault(require(\"@mui/utils/appendOwnerState\"));\nvar _resolveComponentProps = _interopRequireDefault(require(\"@mui/utils/resolveComponentProps\"));\nvar _mergeSlotProps2 = _interopRequireDefault(require(\"@mui/utils/mergeSlotProps\"));\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nfunction useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = (0, _objectWithoutPropertiesLoose2.default)(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = (0, _objectWithoutPropertiesLoose2.default)(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = (0, _resolveComponentProps.default)(slotProps[name], ownerState);\n  const _mergeSlotProps = (0, _mergeSlotProps2.default)((0, _extends2.default)({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = (0, _objectWithoutPropertiesLoose2.default)(_mergeSlotProps.props, _excluded3);\n  const ref = (0, _useForkRef.default)(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = (0, _extends2.default)({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = (0, _appendOwnerState.default)(elementType, (0, _extends2.default)({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}