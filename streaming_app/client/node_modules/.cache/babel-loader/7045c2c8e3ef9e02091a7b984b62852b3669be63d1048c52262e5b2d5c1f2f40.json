{"ast":null,"code":"import React,{useRef,useEffect,useState}from'react';import{Box,IconButton,Tooltip}from'@mui/material';import{BarChart,ShowChart,RadioButtonChecked}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioVisualizer=_ref=>{let{type='bars',theme='default',audioElement}=_ref;const canvasRef=useRef(null);const animationRef=useRef(null);const audioContextRef=useRef(null);const analyserRef=useRef(null);const dataArrayRef=useRef(null);const[isActive,setIsActive]=useState(false);const themeColors={default:['#1DB954','#1ed760','#ffffff'],ocean:['#06b6d4','#67e8f9','#ffffff'],neon:['#ff00ff','#00ffff','#ffffff'],forest:['#22c55e','#4ade80','#ffffff'],cosmic:['#8b5cf6','#a78bfa','#ffffff'],sunset:['#f59e0b','#fbbf24','#ffffff']};const colors=themeColors[theme]||themeColors.default;useEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');canvas.width=canvas.offsetWidth;canvas.height=canvas.offsetHeight;// Create audio context and analyser\nif(!audioContextRef.current){try{audioContextRef.current=new(window.AudioContext||window.webkitAudioContext)();analyserRef.current=audioContextRef.current.createAnalyser();analyserRef.current.fftSize=256;dataArrayRef.current=new Uint8Array(analyserRef.current.frequencyBinCount);}catch(error){console.log('Audio context not available:',error);return;}}const draw=()=>{if(!analyserRef.current||!dataArrayRef.current){// Draw static visualization when no audio\ndrawStatic(ctx,canvas.width,canvas.height);animationRef.current=requestAnimationFrame(draw);return;}analyserRef.current.getByteFrequencyData(dataArrayRef.current);ctx.clearRect(0,0,canvas.width,canvas.height);switch(type){case'bars':drawBars(ctx,canvas.width,canvas.height,dataArrayRef.current);break;case'wave':drawWave(ctx,canvas.width,canvas.height,dataArrayRef.current);break;case'circle':drawCircle(ctx,canvas.width,canvas.height,dataArrayRef.current);break;default:drawBars(ctx,canvas.width,canvas.height,dataArrayRef.current);}animationRef.current=requestAnimationFrame(draw);};draw();return()=>{if(animationRef.current){cancelAnimationFrame(animationRef.current);}};},[type,theme]);const drawStatic=(ctx,width,height)=>{const barCount=64;const barWidth=width/barCount;for(let i=0;i<barCount;i++){const barHeight=Math.random()*height*0.3+10;const gradient=ctx.createLinearGradient(0,height,0,height-barHeight);gradient.addColorStop(0,colors[0]);gradient.addColorStop(1,colors[1]);ctx.fillStyle=gradient;ctx.fillRect(i*barWidth,height-barHeight,barWidth-2,barHeight);}};const drawBars=(ctx,width,height,dataArray)=>{const barCount=dataArray.length;const barWidth=width/barCount;for(let i=0;i<barCount;i++){const barHeight=dataArray[i]/255*height;const gradient=ctx.createLinearGradient(0,height,0,height-barHeight);gradient.addColorStop(0,colors[0]);gradient.addColorStop(1,colors[1]);ctx.fillStyle=gradient;ctx.fillRect(i*barWidth,height-barHeight,barWidth-2,barHeight);}};const drawWave=(ctx,width,height,dataArray)=>{ctx.lineWidth=3;ctx.strokeStyle=colors[0];ctx.beginPath();const sliceWidth=width/dataArray.length;let x=0;for(let i=0;i<dataArray.length;i++){const v=dataArray[i]/128.0;const y=v*height/2;if(i===0){ctx.moveTo(x,y);}else{ctx.lineTo(x,y);}x+=sliceWidth;}ctx.stroke();};const drawCircle=(ctx,width,height,dataArray)=>{const centerX=width/2;const centerY=height/2;const radius=Math.min(width,height)/4;ctx.lineWidth=2;ctx.strokeStyle=colors[0];ctx.beginPath();ctx.arc(centerX,centerY,radius,0,2*Math.PI);ctx.stroke();const barCount=dataArray.length;const angleStep=2*Math.PI/barCount;for(let i=0;i<barCount;i++){const barHeight=dataArray[i]/255*radius;const angle=i*angleStep;const x1=centerX+Math.cos(angle)*radius;const y1=centerY+Math.sin(angle)*radius;const x2=centerX+Math.cos(angle)*(radius+barHeight);const y2=centerY+Math.sin(angle)*(radius+barHeight);const gradient=ctx.createLinearGradient(x1,y1,x2,y2);gradient.addColorStop(0,colors[0]);gradient.addColorStop(1,colors[1]);ctx.strokeStyle=gradient;ctx.lineWidth=2;ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke();}};return/*#__PURE__*/_jsxs(Box,{sx:{position:'relative',height:200,width:'100%'},children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{width:'100%',height:'100%',borderRadius:'8px',background:'rgba(0, 0, 0, 0.2)'}}),/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',top:8,right:8,display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Bar Visualization\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{},sx:{color:type==='bars'?colors[0]:'rgba(255,255,255,0.5)'},children:/*#__PURE__*/_jsx(BarChart,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Wave Visualization\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{},sx:{color:type==='wave'?colors[0]:'rgba(255,255,255,0.5)'},children:/*#__PURE__*/_jsx(ShowChart,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Circle Visualization\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{},sx:{color:type==='circle'?colors[0]:'rgba(255,255,255,0.5)'},children:/*#__PURE__*/_jsx(RadioButtonChecked,{})})})]})]});};export default AudioVisualizer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}