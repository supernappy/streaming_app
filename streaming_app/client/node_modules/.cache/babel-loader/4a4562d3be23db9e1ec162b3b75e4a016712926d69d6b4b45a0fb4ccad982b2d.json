{"ast":null,"code":"// AI API integration for chat\nimport api from './api';\nexport const aiAPI = {\n  // Send a chat message and get an AI response\n  getAIResponse: async (message, roomId) => {\n    const response = await api.post(`/ai/chat`, {\n      message,\n      context: []\n    });\n    return {\n      reply: response.data.response\n    };\n  },\n  // Moderate a chat message\n  moderateMessage: async (message, roomId) => {\n    console.log('[AI] Calling moderation endpoint', {\n      message,\n      roomId\n    });\n    const response = await api.post(`/ai/moderate`, {\n      message\n    });\n    return response.data;\n  },\n  // Summarize chat history\n  summarizeChat: async (chatHistory, roomId) => {\n    // For now, use the chat endpoint to summarize\n    const response = await api.post(`/ai/chat`, {\n      message: `Please summarize this chat conversation: ${chatHistory}`,\n      context: []\n    });\n    return {\n      summary: response.data.response\n    };\n  },\n  // Analyze track for AI features\n  analyzeTrack: async trackData => {\n    console.log('[AI] Analyzing track:', trackData);\n    const response = await api.post(`/ai/track/analyze`, {\n      trackData\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","aiAPI","getAIResponse","message","roomId","response","post","context","reply","data","moderateMessage","console","log","summarizeChat","chatHistory","summary","analyzeTrack","trackData"],"sources":["/Users/walesolagbade/streaming_app/client/src/services/ai.js"],"sourcesContent":["// AI API integration for chat\nimport api from './api';\n\nexport const aiAPI = {\n  // Send a chat message and get an AI response\n  getAIResponse: async (message, roomId) => {\n    const response = await api.post(`/ai/chat`, { message, context: [] });\n    return { reply: response.data.response };\n  },\n  // Moderate a chat message\n  moderateMessage: async (message, roomId) => {\n    console.log('[AI] Calling moderation endpoint', { message, roomId });\n    const response = await api.post(`/ai/moderate`, { message });\n    return response.data;\n  },\n  // Summarize chat history\n  summarizeChat: async (chatHistory, roomId) => {\n    // For now, use the chat endpoint to summarize\n    const response = await api.post(`/ai/chat`, { \n      message: `Please summarize this chat conversation: ${chatHistory}`,\n      context: []\n    });\n    return { summary: response.data.response };\n  },\n  // Analyze track for AI features\n  analyzeTrack: async (trackData) => {\n    console.log('[AI] Analyzing track:', trackData);\n    const response = await api.post(`/ai/track/analyze`, { trackData });\n    return response.data;\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,KAAK,GAAG;EACnB;EACAC,aAAa,EAAE,MAAAA,CAAOC,OAAO,EAAEC,MAAM,KAAK;IACxC,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,UAAU,EAAE;MAAEH,OAAO;MAAEI,OAAO,EAAE;IAAG,CAAC,CAAC;IACrE,OAAO;MAAEC,KAAK,EAAEH,QAAQ,CAACI,IAAI,CAACJ;IAAS,CAAC;EAC1C,CAAC;EACD;EACAK,eAAe,EAAE,MAAAA,CAAOP,OAAO,EAAEC,MAAM,KAAK;IAC1CO,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE;MAAET,OAAO;MAAEC;IAAO,CAAC,CAAC;IACpE,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,cAAc,EAAE;MAAEH;IAAQ,CAAC,CAAC;IAC5D,OAAOE,QAAQ,CAACI,IAAI;EACtB,CAAC;EACD;EACAI,aAAa,EAAE,MAAAA,CAAOC,WAAW,EAAEV,MAAM,KAAK;IAC5C;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,UAAU,EAAE;MAC1CH,OAAO,EAAE,4CAA4CW,WAAW,EAAE;MAClEP,OAAO,EAAE;IACX,CAAC,CAAC;IACF,OAAO;MAAEQ,OAAO,EAAEV,QAAQ,CAACI,IAAI,CAACJ;IAAS,CAAC;EAC5C,CAAC;EACD;EACAW,YAAY,EAAE,MAAOC,SAAS,IAAK;IACjCN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEK,SAAS,CAAC;IAC/C,MAAMZ,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,mBAAmB,EAAE;MAAEW;IAAU,CAAC,CAAC;IACnE,OAAOZ,QAAQ,CAACI,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}