{"ast":null,"code":"var _jsxFileName = \"/Users/walesolagbade/streaming_app/client/src/contexts/SocketContext_enhanced.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  console.log('üöÄ SOCKET PROVIDER: Initializing...');\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [roomState, setRoomState] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [playbackState, setPlaybackState] = useState({\n    isPlaying: false,\n    currentTrackId: null,\n    currentTime: 0,\n    volume: 0.7,\n    isSynced: true\n  });\n  const {\n    user,\n    token,\n    loading\n  } = useAuth();\n\n  // Emoji reaction function (now in correct scope)\n  const reactToMessage = useCallback((messageId, emoji, add = true) => {\n    if (socket && currentRoom) {\n      socket.emit('room:react-message', {\n        roomId: currentRoom,\n        messageId,\n        emoji,\n        add\n      });\n    }\n  }, [socket, currentRoom]);\n  console.log('üîê SOCKET PROVIDER: Auth state', {\n    hasUser: !!user,\n    hasToken: !!token,\n    loading\n  });\n  useEffect(() => {\n    console.log('üîå SOCKET EFFECT: Checking connection requirements', {\n      hasToken: !!token,\n      hasUser: !!user,\n      userId: user === null || user === void 0 ? void 0 : user.id,\n      currentSocket: !!socket,\n      authLoading: loading\n    });\n\n    // Don't try to connect while auth is still loading\n    if (loading) {\n      console.log('‚è≥ SOCKET: Waiting for auth to finish loading...');\n      return;\n    }\n    if (!token || !user) {\n      console.log('‚ùå SOCKET: Missing token or user, setting disconnected state');\n      if (socket) {\n        socket.disconnect();\n        setSocket(null);\n      }\n      setIsConnected(false);\n      return;\n    }\n    console.log('‚úÖ SOCKET: Creating new connection...');\n\n    // Create socket connection with API URL from environment or default\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5002';\n    console.log('üîå SOCKET: Connecting to:', apiUrl);\n    console.log('üîê SOCKET: Using token:', token ? `${token.substring(0, 20)}...` : 'NO TOKEN');\n    console.log('üë§ SOCKET: User:', user ? `${user.username} (ID: ${user.id})` : 'NO USER');\n\n    // Test if token is valid by making a quick API call\n    if (token) {\n      fetch(`${apiUrl}/api/auth/me`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => {\n        console.log('üîê SOCKET: Token validation response:', response.status);\n        return response.json();\n      }).then(data => {\n        console.log('üîê SOCKET: Token validation data:', data);\n      }).catch(error => {\n        console.error('üîê SOCKET: Token validation failed:', error);\n      });\n    }\n    const newSocket = io(apiUrl, {\n      auth: {\n        token: token\n      },\n      transports: ['websocket', 'polling'],\n      timeout: 5000,\n      reconnection: true,\n      reconnectionAttempts: 3,\n      reconnectionDelay: 1000,\n      forceNew: true\n    });\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('‚úÖ Connected to WebSocket server');\n      setIsConnected(true);\n\n      // If we were trying to join a room, rejoin after reconnection\n      if (currentRoom) {\n        console.log('üîÑ SOCKET: Rejoining room after connection:', currentRoom);\n        newSocket.emit('room:join', currentRoom);\n      }\n    });\n    newSocket.on('connect_error', error => {\n      console.error('‚ùå Socket connection error:', error.message);\n      console.error('‚ùå Socket connection details:', {\n        type: error.type,\n        description: error.description,\n        context: error.context,\n        serverUrl: apiUrl,\n        hasToken: !!token\n      });\n      setIsConnected(false);\n    });\n    newSocket.on('disconnect', reason => {\n      console.log('üîå Socket disconnected:', reason);\n      setIsConnected(false);\n    });\n\n    // Room event handlers\n    newSocket.on('room:participants-list', participantsList => {\n      console.log('üìã Received participants list:', participantsList);\n      setParticipants(participantsList);\n    });\n    newSocket.on('room:user-joined', data => {\n      console.log('üë§ User joined room:', data.user.username);\n      setParticipants(prev => {\n        if (prev.find(p => p.id === data.user.id)) {\n          return prev; // User already in list\n        }\n        return [...prev, {\n          ...data.user,\n          isHost: data.isHost,\n          joinedAt: data.timestamp\n        }];\n      });\n    });\n    newSocket.on('room:user-left', data => {\n      console.log('üë§ User left room:', data.user.username);\n      setParticipants(prev => prev.filter(p => p.id !== data.user.id));\n    });\n\n    // Synchronized playback event handlers\n    newSocket.on('playback-state-sync', state => {\n      console.log('üîÑ Playback state sync received:', state);\n      setPlaybackState({\n        isPlaying: state.isPlaying,\n        currentTrackId: state.currentTrackId,\n        currentTime: state.currentTime,\n        volume: state.volume,\n        isSynced: true\n      });\n    });\n    newSocket.on('sync-play', data => {\n      console.log('‚ñ∂Ô∏è Sync play received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        isPlaying: true,\n        currentTrackId: data.trackId || prev.currentTrackId,\n        currentTime: data.currentTime,\n        isSynced: true\n      }));\n    });\n    newSocket.on('sync-pause', data => {\n      console.log('‚è∏Ô∏è Sync pause received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        isPlaying: false,\n        currentTime: data.currentTime,\n        isSynced: true\n      }));\n    });\n    newSocket.on('sync-seek', data => {\n      console.log('‚è≠Ô∏è Sync seek received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        currentTime: data.currentTime,\n        isSynced: true\n      }));\n    });\n    newSocket.on('sync-track-change', data => {\n      console.log('üéµ Sync track change received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        currentTrackId: data.trackId,\n        currentTime: 0,\n        isPlaying: data.autoPlay,\n        isSynced: true\n      }));\n    });\n    newSocket.on('sync-volume-change', data => {\n      console.log('üîä Sync volume change received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        volume: data.volume,\n        isSynced: true\n      }));\n    });\n\n    // Chat event handlers\n    newSocket.on('room:chat-message', message => {\n      console.log('üí¨ New message received:', message);\n      setMessages(prev => [...prev, {\n        id: message.id || Date.now(),\n        user: {\n          id: message.userId,\n          username: message.username\n        },\n        message: message.message,\n        timestamp: message.timestamp,\n        type: 'text'\n      }]);\n    });\n    newSocket.on('room:chat-history', history => {\n      console.log('üìú Chat history received:', history.length, 'messages');\n      setMessages(history.map(msg => ({\n        id: msg.id,\n        user: {\n          id: msg.userId,\n          username: msg.username\n        },\n        message: msg.message,\n        timestamp: msg.timestamp,\n        type: msg.type || 'text'\n      })));\n    });\n    newSocket.on('error', error => {\n      console.error('Socket error:', error);\n    });\n    setSocket(newSocket);\n\n    // Cleanup function\n    return () => {\n      console.log('üßπ SOCKET: Cleaning up connection');\n      newSocket.disconnect();\n    };\n  }, [token, user, loading]);\n\n  // Room management functions\n  const joinRoom = useCallback(async (roomId, userData) => {\n    console.log('üö™ JOIN ROOM: Called with', {\n      roomId,\n      userData: userData === null || userData === void 0 ? void 0 : userData.username,\n      hasSocket: !!socket,\n      userDataObj: userData\n    });\n    if (!socket) {\n      console.error('‚ùå JOIN ROOM: Cannot join - missing socket');\n      alert('Socket connection not established. Please refresh and try again.');\n      return;\n    }\n    if (!userData || !userData.id || !userData.username) {\n      console.error('‚ùå JOIN ROOM: Cannot join - missing or invalid user data', userData);\n      alert('User data missing or invalid. Please re-login.');\n      return;\n    }\n    try {\n      setCurrentRoom(roomId);\n      setParticipants([{\n        id: userData.id,\n        username: userData.username,\n        email: userData.email,\n        isHost: false,\n        joinedAt: new Date().toISOString()\n      }]);\n      console.log('üö™ JOIN ROOM: Emitting room:join event for room', roomId);\n      socket.emit('room:join', roomId, ack => {\n        if (ack && ack.error) {\n          console.error('‚ùå JOIN ROOM: Server error:', ack.error);\n          alert('Failed to join room: ' + ack.error);\n        } else {\n          console.log('‚úÖ JOIN ROOM: Successfully joined room', roomId);\n        }\n      });\n    } catch (error) {\n      console.error('‚ùå JOIN ROOM: Exception', error);\n      alert('Unexpected error joining room: ' + error.message);\n    }\n  }, [socket]);\n  const leaveRoom = useCallback(() => {\n    if (socket && currentRoom) {\n      console.log(`üö™ Leaving room: ${currentRoom}`);\n      socket.emit('room:leave', currentRoom);\n      setCurrentRoom(null);\n      setParticipants([]);\n      setMessages([]);\n      setPlaybackState({\n        isPlaying: false,\n        currentTrackId: null,\n        currentTime: 0,\n        volume: 0.7,\n        isSynced: true\n      });\n    }\n  }, [socket, currentRoom]);\n\n  // Host-only playback controls\n  const hostPlay = useCallback((trackId, currentTime = 0) => {\n    console.log('‚ñ∂Ô∏è HOST PLAY: Called with', {\n      trackId,\n      currentTime,\n      hasSocket: !!socket,\n      currentRoom,\n      socketConnected: socket === null || socket === void 0 ? void 0 : socket.connected\n    });\n    if (socket && currentRoom) {\n      console.log('‚ñ∂Ô∏è HOST PLAY: Emitting host-play event');\n      socket.emit('host-play', {\n        trackId,\n        currentTime\n      });\n    } else {\n      console.error('üö´ HOST PLAY: Cannot emit - missing socket or room', {\n        hasSocket: !!socket,\n        currentRoom,\n        socketConnected: socket === null || socket === void 0 ? void 0 : socket.connected\n      });\n    }\n  }, [socket, currentRoom]);\n  const hostPause = useCallback((currentTime = 0) => {\n    console.log('‚è∏Ô∏è HOST PAUSE: Called with', {\n      currentTime,\n      hasSocket: !!socket,\n      currentRoom,\n      socketConnected: socket === null || socket === void 0 ? void 0 : socket.connected\n    });\n    if (socket && currentRoom) {\n      console.log('‚è∏Ô∏è HOST PAUSE: Emitting host-pause event');\n      socket.emit('host-pause', {\n        currentTime\n      });\n    } else {\n      console.error('üö´ HOST PAUSE: Cannot emit - missing socket or room', {\n        hasSocket: !!socket,\n        currentRoom,\n        socketConnected: socket === null || socket === void 0 ? void 0 : socket.connected\n      });\n    }\n  }, [socket, currentRoom]);\n  const hostSeek = useCallback(currentTime => {\n    if (socket && currentRoom) {\n      console.log('‚è≠Ô∏è Host seek:', currentTime);\n      socket.emit('host-seek', {\n        currentTime\n      });\n    }\n  }, [socket, currentRoom]);\n  const hostChangeTrack = useCallback((trackId, autoPlay = false) => {\n    console.log('üéµ HOST CHANGE TRACK: Called with', {\n      trackId,\n      autoPlay,\n      hasSocket: !!socket,\n      currentRoom,\n      socketConnected: socket === null || socket === void 0 ? void 0 : socket.connected,\n      trackIdType: typeof trackId\n    });\n    if (socket && currentRoom) {\n      console.log('üéµ HOST CHANGE TRACK: Emitting host-change-track event to room', currentRoom);\n      socket.emit('host-change-track', {\n        trackId,\n        autoPlay\n      });\n    } else {\n      console.error('üö´ HOST CHANGE TRACK: Cannot emit - missing socket or room', {\n        hasSocket: !!socket,\n        socketConnected: socket === null || socket === void 0 ? void 0 : socket.connected,\n        currentRoom,\n        reason: !socket ? 'no socket' : !currentRoom ? 'no currentRoom' : 'unknown'\n      });\n    }\n  }, [socket, currentRoom]);\n  const hostVolumeChange = useCallback(volume => {\n    if (socket && currentRoom) {\n      console.log('üîä Host volume change:', volume);\n      socket.emit('host-volume-change', {\n        volume\n      });\n    }\n  }, [socket, currentRoom]);\n\n  // Request playback sync (for recovering from desync)\n  const requestPlaybackSync = useCallback(() => {\n    if (socket && currentRoom) {\n      console.log('üîÑ Requesting playback sync');\n      socket.emit('request-playback-sync');\n    }\n  }, [socket, currentRoom]);\n\n  // Chat functions\n  const sendMessage = useCallback(message => {\n    if (!socket) {\n      console.error('‚ùå SEND MESSAGE: No socket connection.');\n      alert('Cannot send message: No socket connection.');\n      return;\n    }\n    if (!currentRoom) {\n      console.error('‚ùå SEND MESSAGE: No current room set.');\n      alert('Cannot send message: Not in a room.');\n      return;\n    }\n    if (!message || typeof message !== 'string' || !message.trim()) {\n      console.error('‚ùå SEND MESSAGE: Invalid message content.', message);\n      alert('Cannot send empty message.');\n      return;\n    }\n    const messageData = {\n      roomId: currentRoom,\n      message: message.trim()\n    };\n    console.log('üí¨ SEND MESSAGE: Emitting room:chat-message', messageData);\n    socket.emit('room:chat-message', messageData, ack => {\n      if (ack && ack.error) {\n        console.error('‚ùå SEND MESSAGE: Server error:', ack.error);\n        alert('Failed to send message: ' + ack.error);\n      } else {\n        console.log('‚úÖ SEND MESSAGE: Message sent successfully.');\n      }\n    });\n  }, [socket, currentRoom]);\n\n  // Participants functions\n  const getParticipants = useCallback(() => {\n    if (socket && currentRoom) {\n      console.log('üìã Requesting participants list for room:', currentRoom);\n      socket.emit('room:get-participants', currentRoom);\n    }\n  }, [socket, currentRoom]);\n\n  // Status update functions\n  const updateStatus = useCallback(status => {\n    if (socket && currentRoom) {\n      socket.emit('update-status', {\n        roomId: currentRoom,\n        ...status\n      });\n    }\n  }, [socket, currentRoom]);\n  const notifyTrackAdded = useCallback(trackData => {\n    if (socket && currentRoom) {\n      socket.emit('track-added', {\n        roomId: currentRoom,\n        track: trackData\n      });\n    }\n  }, [socket, currentRoom]);\n  const value = {\n    socket,\n    isConnected,\n    currentRoom,\n    roomState,\n    participants,\n    messages,\n    playbackState,\n    // Room management\n    joinRoom,\n    leaveRoom,\n    // Host playback controls\n    hostPlay,\n    hostPause,\n    hostSeek,\n    hostChangeTrack,\n    hostVolumeChange,\n    requestPlaybackSync,\n    // Chat\n    sendMessage,\n    reactToMessage,\n    // Participants\n    getParticipants,\n    // Other functions\n    updateStatus,\n    notifyTrackAdded\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"milnTwykCjzuNgaTTgn434wmpRw=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useCallback","io","useAuth","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","console","log","socket","setSocket","isConnected","setIsConnected","currentRoom","setCurrentRoom","roomState","setRoomState","participants","setParticipants","messages","setMessages","playbackState","setPlaybackState","isPlaying","currentTrackId","currentTime","volume","isSynced","user","token","loading","reactToMessage","messageId","emoji","add","emit","roomId","hasUser","hasToken","userId","id","currentSocket","authLoading","disconnect","apiUrl","process","env","REACT_APP_API_URL","substring","username","fetch","headers","then","response","status","json","data","catch","error","newSocket","auth","transports","timeout","reconnection","reconnectionAttempts","reconnectionDelay","forceNew","on","message","type","description","serverUrl","reason","participantsList","prev","find","p","isHost","joinedAt","timestamp","filter","state","trackId","autoPlay","Date","now","history","length","map","msg","joinRoom","userData","hasSocket","userDataObj","alert","email","toISOString","ack","leaveRoom","hostPlay","socketConnected","connected","hostPause","hostSeek","hostChangeTrack","trackIdType","hostVolumeChange","requestPlaybackSync","sendMessage","trim","messageData","getParticipants","updateStatus","notifyTrackAdded","trackData","track","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/walesolagbade/streaming_app/client/src/contexts/SocketContext_enhanced.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  console.log('üöÄ SOCKET PROVIDER: Initializing...');\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [roomState, setRoomState] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [playbackState, setPlaybackState] = useState({\n    isPlaying: false,\n    currentTrackId: null,\n    currentTime: 0,\n    volume: 0.7,\n    isSynced: true\n  });\n  const { user, token, loading } = useAuth();\n\n  // Emoji reaction function (now in correct scope)\n  const reactToMessage = useCallback((messageId, emoji, add = true) => {\n    if (socket && currentRoom) {\n      socket.emit('room:react-message', {\n        roomId: currentRoom,\n        messageId,\n        emoji,\n        add\n      });\n    }\n  }, [socket, currentRoom]);\n  \n  console.log('üîê SOCKET PROVIDER: Auth state', { hasUser: !!user, hasToken: !!token, loading });\n\n  useEffect(() => {\n    console.log('üîå SOCKET EFFECT: Checking connection requirements', { \n      hasToken: !!token, \n      hasUser: !!user,\n      userId: user?.id,\n      currentSocket: !!socket,\n      authLoading: loading\n    });\n    \n    // Don't try to connect while auth is still loading\n    if (loading) {\n      console.log('‚è≥ SOCKET: Waiting for auth to finish loading...');\n      return;\n    }\n    \n    if (!token || !user) {\n      console.log('‚ùå SOCKET: Missing token or user, setting disconnected state');\n      if (socket) {\n        socket.disconnect();\n        setSocket(null);\n      }\n      setIsConnected(false);\n      return;\n    }\n\n    console.log('‚úÖ SOCKET: Creating new connection...');\n    \n    // Create socket connection with API URL from environment or default\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5002';\n    console.log('üîå SOCKET: Connecting to:', apiUrl);\n    console.log('üîê SOCKET: Using token:', token ? `${token.substring(0, 20)}...` : 'NO TOKEN');\n    console.log('üë§ SOCKET: User:', user ? `${user.username} (ID: ${user.id})` : 'NO USER');\n    \n    // Test if token is valid by making a quick API call\n    if (token) {\n      fetch(`${apiUrl}/api/auth/me`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })\n      .then(response => {\n        console.log('üîê SOCKET: Token validation response:', response.status);\n        return response.json();\n      })\n      .then(data => {\n        console.log('üîê SOCKET: Token validation data:', data);\n      })\n      .catch(error => {\n        console.error('üîê SOCKET: Token validation failed:', error);\n      });\n    }\n    \n    const newSocket = io(apiUrl, {\n      auth: {\n        token: token\n      },\n      transports: ['websocket', 'polling'],\n      timeout: 5000,\n      reconnection: true,\n      reconnectionAttempts: 3,\n      reconnectionDelay: 1000,\n      forceNew: true\n    });\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('‚úÖ Connected to WebSocket server');\n      setIsConnected(true);\n      \n      // If we were trying to join a room, rejoin after reconnection\n      if (currentRoom) {\n        console.log('üîÑ SOCKET: Rejoining room after connection:', currentRoom);\n        newSocket.emit('room:join', currentRoom);\n      }\n    });\n\n    newSocket.on('connect_error', (error) => {\n      console.error('‚ùå Socket connection error:', error.message);\n      console.error('‚ùå Socket connection details:', {\n        type: error.type,\n        description: error.description,\n        context: error.context,\n        serverUrl: apiUrl,\n        hasToken: !!token\n      });\n      setIsConnected(false);\n    });\n\n    newSocket.on('disconnect', (reason) => {\n      console.log('üîå Socket disconnected:', reason);\n      setIsConnected(false);\n    });\n\n    // Room event handlers\n    newSocket.on('room:participants-list', (participantsList) => {\n      console.log('üìã Received participants list:', participantsList);\n      setParticipants(participantsList);\n    });\n\n    newSocket.on('room:user-joined', (data) => {\n      console.log('üë§ User joined room:', data.user.username);\n      setParticipants(prev => {\n        if (prev.find(p => p.id === data.user.id)) {\n          return prev; // User already in list\n        }\n        return [...prev, { ...data.user, isHost: data.isHost, joinedAt: data.timestamp }];\n      });\n    });\n\n    newSocket.on('room:user-left', (data) => {\n      console.log('üë§ User left room:', data.user.username);\n      setParticipants(prev => prev.filter(p => p.id !== data.user.id));\n    });\n\n    // Synchronized playback event handlers\n    newSocket.on('playback-state-sync', (state) => {\n      console.log('üîÑ Playback state sync received:', state);\n      setPlaybackState({\n        isPlaying: state.isPlaying,\n        currentTrackId: state.currentTrackId,\n        currentTime: state.currentTime,\n        volume: state.volume,\n        isSynced: true\n      });\n    });\n\n    newSocket.on('sync-play', (data) => {\n      console.log('‚ñ∂Ô∏è Sync play received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        isPlaying: true,\n        currentTrackId: data.trackId || prev.currentTrackId,\n        currentTime: data.currentTime,\n        isSynced: true\n      }));\n    });\n\n    newSocket.on('sync-pause', (data) => {\n      console.log('‚è∏Ô∏è Sync pause received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        isPlaying: false,\n        currentTime: data.currentTime,\n        isSynced: true\n      }));\n    });\n\n    newSocket.on('sync-seek', (data) => {\n      console.log('‚è≠Ô∏è Sync seek received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        currentTime: data.currentTime,\n        isSynced: true\n      }));\n    });\n\n    newSocket.on('sync-track-change', (data) => {\n      console.log('üéµ Sync track change received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        currentTrackId: data.trackId,\n        currentTime: 0,\n        isPlaying: data.autoPlay,\n        isSynced: true\n      }));\n    });\n\n    newSocket.on('sync-volume-change', (data) => {\n      console.log('üîä Sync volume change received:', data);\n      setPlaybackState(prev => ({\n        ...prev,\n        volume: data.volume,\n        isSynced: true\n      }));\n    });\n\n    // Chat event handlers\n    newSocket.on('room:chat-message', (message) => {\n      console.log('üí¨ New message received:', message);\n      setMessages(prev => [...prev, {\n        id: message.id || Date.now(),\n        user: {\n          id: message.userId,\n          username: message.username\n        },\n        message: message.message,\n        timestamp: message.timestamp,\n        type: 'text'\n      }]);\n    });\n\n    newSocket.on('room:chat-history', (history) => {\n      console.log('üìú Chat history received:', history.length, 'messages');\n      setMessages(history.map(msg => ({\n        id: msg.id,\n        user: {\n          id: msg.userId,\n          username: msg.username\n        },\n        message: msg.message,\n        timestamp: msg.timestamp,\n        type: msg.type || 'text'\n      })));\n    });\n\n    newSocket.on('error', (error) => {\n      console.error('Socket error:', error);\n    });\n\n    setSocket(newSocket);\n\n    // Cleanup function\n    return () => {\n      console.log('üßπ SOCKET: Cleaning up connection');\n      newSocket.disconnect();\n    };\n  }, [token, user, loading]);\n\n  // Room management functions\n  const joinRoom = useCallback(async (roomId, userData) => {\n    console.log('üö™ JOIN ROOM: Called with', { roomId, userData: userData?.username, hasSocket: !!socket, userDataObj: userData });\n    if (!socket) {\n      console.error('‚ùå JOIN ROOM: Cannot join - missing socket');\n      alert('Socket connection not established. Please refresh and try again.');\n      return;\n    }\n    if (!userData || !userData.id || !userData.username) {\n      console.error('‚ùå JOIN ROOM: Cannot join - missing or invalid user data', userData);\n      alert('User data missing or invalid. Please re-login.');\n      return;\n    }\n    try {\n      setCurrentRoom(roomId);\n      setParticipants([{\n        id: userData.id,\n        username: userData.username,\n        email: userData.email,\n        isHost: false,\n        joinedAt: new Date().toISOString()\n      }]);\n      console.log('üö™ JOIN ROOM: Emitting room:join event for room', roomId);\n      socket.emit('room:join', roomId, (ack) => {\n        if (ack && ack.error) {\n          console.error('‚ùå JOIN ROOM: Server error:', ack.error);\n          alert('Failed to join room: ' + ack.error);\n        } else {\n          console.log('‚úÖ JOIN ROOM: Successfully joined room', roomId);\n        }\n      });\n    } catch (error) {\n      console.error('‚ùå JOIN ROOM: Exception', error);\n      alert('Unexpected error joining room: ' + error.message);\n    }\n  }, [socket]);\n\n  const leaveRoom = useCallback(() => {\n    if (socket && currentRoom) {\n      console.log(`üö™ Leaving room: ${currentRoom}`);\n      socket.emit('room:leave', currentRoom);\n      setCurrentRoom(null);\n      setParticipants([]);\n      setMessages([]);\n      setPlaybackState({\n        isPlaying: false,\n        currentTrackId: null,\n        currentTime: 0,\n        volume: 0.7,\n        isSynced: true\n      });\n    }\n  }, [socket, currentRoom]);\n\n  // Host-only playback controls\n  const hostPlay = useCallback((trackId, currentTime = 0) => {\n    console.log('‚ñ∂Ô∏è HOST PLAY: Called with', {\n      trackId,\n      currentTime,\n      hasSocket: !!socket,\n      currentRoom,\n      socketConnected: socket?.connected\n    });\n    \n    if (socket && currentRoom) {\n      console.log('‚ñ∂Ô∏è HOST PLAY: Emitting host-play event');\n      socket.emit('host-play', { trackId, currentTime });\n    } else {\n      console.error('üö´ HOST PLAY: Cannot emit - missing socket or room', {\n        hasSocket: !!socket,\n        currentRoom,\n        socketConnected: socket?.connected\n      });\n    }\n  }, [socket, currentRoom]);\n\n  const hostPause = useCallback((currentTime = 0) => {\n    console.log('‚è∏Ô∏è HOST PAUSE: Called with', {\n      currentTime,\n      hasSocket: !!socket,\n      currentRoom,\n      socketConnected: socket?.connected\n    });\n    \n    if (socket && currentRoom) {\n      console.log('‚è∏Ô∏è HOST PAUSE: Emitting host-pause event');\n      socket.emit('host-pause', { currentTime });\n    } else {\n      console.error('üö´ HOST PAUSE: Cannot emit - missing socket or room', {\n        hasSocket: !!socket,\n        currentRoom,\n        socketConnected: socket?.connected\n      });\n    }\n  }, [socket, currentRoom]);\n\n  const hostSeek = useCallback((currentTime) => {\n    if (socket && currentRoom) {\n      console.log('‚è≠Ô∏è Host seek:', currentTime);\n      socket.emit('host-seek', { currentTime });\n    }\n  }, [socket, currentRoom]);\n\n  const hostChangeTrack = useCallback((trackId, autoPlay = false) => {\n    console.log('üéµ HOST CHANGE TRACK: Called with', {\n      trackId,\n      autoPlay,\n      hasSocket: !!socket,\n      currentRoom,\n      socketConnected: socket?.connected,\n      trackIdType: typeof trackId\n    });\n    \n    if (socket && currentRoom) {\n      console.log('üéµ HOST CHANGE TRACK: Emitting host-change-track event to room', currentRoom);\n      socket.emit('host-change-track', { trackId, autoPlay });\n    } else {\n      console.error('üö´ HOST CHANGE TRACK: Cannot emit - missing socket or room', {\n        hasSocket: !!socket,\n        socketConnected: socket?.connected,\n        currentRoom,\n        reason: !socket ? 'no socket' : !currentRoom ? 'no currentRoom' : 'unknown'\n      });\n    }\n  }, [socket, currentRoom]);\n\n  const hostVolumeChange = useCallback((volume) => {\n    if (socket && currentRoom) {\n      console.log('üîä Host volume change:', volume);\n      socket.emit('host-volume-change', { volume });\n    }\n  }, [socket, currentRoom]);\n\n  // Request playback sync (for recovering from desync)\n  const requestPlaybackSync = useCallback(() => {\n    if (socket && currentRoom) {\n      console.log('üîÑ Requesting playback sync');\n      socket.emit('request-playback-sync');\n    }\n  }, [socket, currentRoom]);\n\n  // Chat functions\n  const sendMessage = useCallback((message) => {\n    if (!socket) {\n      console.error('‚ùå SEND MESSAGE: No socket connection.');\n      alert('Cannot send message: No socket connection.');\n      return;\n    }\n    if (!currentRoom) {\n      console.error('‚ùå SEND MESSAGE: No current room set.');\n      alert('Cannot send message: Not in a room.');\n      return;\n    }\n    if (!message || typeof message !== 'string' || !message.trim()) {\n      console.error('‚ùå SEND MESSAGE: Invalid message content.', message);\n      alert('Cannot send empty message.');\n      return;\n    }\n    const messageData = {\n      roomId: currentRoom,\n      message: message.trim()\n    };\n    console.log('üí¨ SEND MESSAGE: Emitting room:chat-message', messageData);\n    socket.emit('room:chat-message', messageData, (ack) => {\n      if (ack && ack.error) {\n        console.error('‚ùå SEND MESSAGE: Server error:', ack.error);\n        alert('Failed to send message: ' + ack.error);\n      } else {\n        console.log('‚úÖ SEND MESSAGE: Message sent successfully.');\n      }\n    });\n  }, [socket, currentRoom]);\n\n  // Participants functions\n  const getParticipants = useCallback(() => {\n    if (socket && currentRoom) {\n      console.log('üìã Requesting participants list for room:', currentRoom);\n      socket.emit('room:get-participants', currentRoom);\n    }\n  }, [socket, currentRoom]);\n\n  // Status update functions\n  const updateStatus = useCallback((status) => {\n    if (socket && currentRoom) {\n      socket.emit('update-status', { roomId: currentRoom, ...status });\n    }\n  }, [socket, currentRoom]);\n\n  const notifyTrackAdded = useCallback((trackData) => {\n    if (socket && currentRoom) {\n      socket.emit('track-added', { roomId: currentRoom, track: trackData });\n    }\n  }, [socket, currentRoom]);\n\n  const value = {\n    socket,\n    isConnected,\n    currentRoom,\n    roomState,\n    participants,\n    messages,\n    playbackState,\n    // Room management\n    joinRoom,\n    leaveRoom,\n    // Host playback controls\n    hostPlay,\n    hostPause,\n    hostSeek,\n    hostChangeTrack,\n    hostVolumeChange,\n    requestPlaybackSync,\n    // Chat\n    sendMessage,\n    reactToMessage,\n    // Participants\n    getParticipants,\n    // Other functions\n    updateStatus,\n    notifyTrackAdded\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}