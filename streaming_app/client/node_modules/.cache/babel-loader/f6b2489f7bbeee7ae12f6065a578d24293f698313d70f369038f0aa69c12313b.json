{"ast":null,"code":"var _jsxFileName = \"/Users/walesolagbade/streaming_app/client/src/components/RoomChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { Box, Paper, Typography, TextField, IconButton, List, ListItem, ListItemAvatar, Avatar, ListItemText, Chip, Tooltip, Divider, Button, Dialog, DialogTitle, DialogContent, CircularProgress } from '@mui/material';\nimport { Send, Person, Info, Announcement, MusicNote } from '@mui/icons-material';\nimport { useSocket } from '../contexts/SocketContext_enhanced';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomChat = ({\n  room\n}) => {\n  _s();\n  var _participants$find;\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    user\n  } = useAuth();\n  const [message, setMessage] = useState('');\n  const [showRequestDialog, setShowRequestDialog] = useState(false);\n  const [trackSearch, setTrackSearch] = useState('');\n  const [trackResults, setTrackResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [requestNote, setRequestNote] = useState('');\n  const [selectedTrack, setSelectedTrack] = useState(null);\n  const {\n    messages,\n    sendMessage,\n    participants,\n    reactToMessage,\n    socket,\n    currentRoom,\n    playbackState\n  } = useSocket();\n  // Determine if current user is host\n  const isHost = (_participants$find = participants.find(p => p.id === user.id)) === null || _participants$find === void 0 ? void 0 : _participants$find.isHost;\n\n  // Host: Accept & Queue song request\n  const handleAcceptSongRequest = msg => {\n    if (!isHost || !msg.trackId) return;\n    if (socket && currentRoom) {\n      socket.emit('room:add-track', {\n        roomId: currentRoom,\n        trackId: msg.trackId\n      });\n      enqueueSnackbar('Song request accepted and added to queue!', {\n        variant: 'success',\n        autoHideDuration: 2500\n      });\n    } else {\n      enqueueSnackbar('Failed to accept song request.', {\n        variant: 'error',\n        autoHideDuration: 2500\n      });\n    }\n  };\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    sendMessage(message.trim());\n    setMessage('');\n    enqueueSnackbar('Message sent!', {\n      variant: 'info',\n      autoHideDuration: 1500\n    });\n  };\n\n  // Song request logic\n  const handleOpenRequestDialog = () => {\n    setShowRequestDialog(true);\n    setTrackSearch('');\n    setTrackResults([]);\n    setRequestNote('');\n    setSelectedTrack(null);\n  };\n  const handleCloseRequestDialog = () => {\n    setShowRequestDialog(false);\n  };\n  const handleTrackSearch = async query => {\n    setTrackSearch(query);\n    if (!query.trim()) {\n      setTrackResults([]);\n      return;\n    }\n    setIsSearching(true);\n    try {\n      const res = await fetch(`/api/search?q=${encodeURIComponent(query)}&type=tracks`);\n      const data = await res.json();\n      setTrackResults(data.results && data.results.tracks ? data.results.tracks : []);\n    } catch (err) {\n      setTrackResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleSelectTrack = track => {\n    setSelectedTrack(track);\n  };\n  const handleRequestSong = () => {\n    if (!selectedTrack) {\n      enqueueSnackbar('Please select a track to request.', {\n        variant: 'warning',\n        autoHideDuration: 2000\n      });\n      return;\n    }\n    // Send as a special chat message\n    if (socket && currentRoom) {\n      socket.emit('room:chat-message', {\n        roomId: currentRoom,\n        message: requestNote,\n        messageType: 'song_request',\n        trackId: selectedTrack.id,\n        trackInfo: {\n          title: selectedTrack.title,\n          artist: selectedTrack.artist,\n          album: selectedTrack.album,\n          genre: selectedTrack.genre,\n          duration: selectedTrack.duration\n        }\n      });\n      enqueueSnackbar('Song request sent!', {\n        variant: 'success',\n        autoHideDuration: 2000\n      });\n    } else {\n      enqueueSnackbar('Failed to send song request.', {\n        variant: 'error',\n        autoHideDuration: 2000\n      });\n    }\n    setShowRequestDialog(false);\n    setSelectedTrack(null);\n    setRequestNote('');\n    setTrackSearch('');\n    setTrackResults([]);\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getMessageTypeIcon = type => {\n    switch (type) {\n      case 'system':\n        return /*#__PURE__*/_jsxDEV(Info, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }, this);\n      case 'announcement':\n        return /*#__PURE__*/_jsxDEV(Announcement, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Person, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getMessageTypeColor = type => {\n    switch (type) {\n      case 'system':\n        return 'info';\n      case 'announcement':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 6,\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      background: 'rgba(255,255,255,0.15)',\n      backdropFilter: 'blur(16px) saturate(180%)',\n      borderRadius: 4,\n      boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.15)',\n      border: '1px solid rgba(255,255,255,0.18)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderBottom: 1,\n        borderColor: 'divider',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        zIndex: 2,\n        background: 'rgba(255,255,255,0.25)',\n        backdropFilter: 'blur(12px) saturate(180%)',\n        borderTopLeftRadius: 16,\n        borderTopRightRadius: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            size: \"small\",\n            label: `${participants.length} participant${participants.length !== 1 ? 's' : ''}`,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            size: \"small\",\n            label: `${messages.length} message${messages.length !== 1 ? 's' : ''}`,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ref: messagesContainerRef,\n      sx: {\n        flexGrow: 1,\n        overflow: 'auto',\n        maxHeight: '400px',\n        p: 1,\n        background: 'rgba(255,255,255,0.10)',\n        transition: 'background 0.3s',\n        borderRadius: 3\n      },\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          color: 'text.secondary'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          p: 0\n        },\n        children: [messages.map((msg, index) => {\n          var _msg$user, _msg$user2, _msg$user3, _msg$user3$username, _msg$user4;\n          const isCurrentUser = ((_msg$user = msg.user) === null || _msg$user === void 0 ? void 0 : _msg$user.id) === user.id;\n          const isSystemMessage = msg.type !== 'text' && msg.type !== 'song_request';\n          if (msg.type === 'song_request') {\n            var _msg$username, _msg$trackInfo, _msg$trackInfo2, _msg$trackInfo3, _msg$trackInfo4;\n            // Song request message UI\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              alignItems: \"flex-start\",\n              sx: {\n                flexDirection: isCurrentUser ? 'row-reverse' : 'row',\n                px: 1,\n                py: 0.5,\n                transition: 'background 0.3s',\n                borderRadius: 3,\n                mb: 1,\n                background: isCurrentUser ? 'rgba(124,77,255,0.10)' : 'rgba(243,229,245,0.7)',\n                boxShadow: isCurrentUser ? '0 2px 8px 0 rgba(124,77,255,0.10)' : '0 2px 8px 0 rgba(124,77,255,0.05)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                sx: {\n                  minWidth: 40\n                },\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: msg.username,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      width: 36,\n                      height: 36,\n                      bgcolor: 'secondary.main',\n                      border: msg.isHost ? '2px solid #7c4dff' : '2px solid #fff',\n                      boxShadow: msg.isHost ? '0 0 0 2px #7c4dff' : 'none',\n                      transition: 'border 0.2s, box-shadow 0.2s'\n                    },\n                    children: (_msg$username = msg.username) === null || _msg$username === void 0 ? void 0 : _msg$username.charAt(0).toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  maxWidth: '70%',\n                  ml: isCurrentUser ? 0 : 1,\n                  mr: isCurrentUser ? 1 : 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 0,\n                  sx: {\n                    p: 1.5,\n                    background: 'rgba(124,77,255,0.08)',\n                    borderLeft: '6px solid #7c4dff',\n                    borderRadius: 3,\n                    boxShadow: '0 1px 4px 0 rgba(124,77,255,0.08)'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"secondary\",\n                    fontWeight: \"bold\",\n                    children: [msg.username, \" requested a song:\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    sx: {\n                      fontWeight: 600\n                    },\n                    children: ((_msg$trackInfo = msg.trackInfo) === null || _msg$trackInfo === void 0 ? void 0 : _msg$trackInfo.title) || 'Unknown Title'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [((_msg$trackInfo2 = msg.trackInfo) === null || _msg$trackInfo2 === void 0 ? void 0 : _msg$trackInfo2.artist) || 'Unknown Artist', (_msg$trackInfo3 = msg.trackInfo) !== null && _msg$trackInfo3 !== void 0 && _msg$trackInfo3.album ? ` • ${msg.trackInfo.album}` : '', (_msg$trackInfo4 = msg.trackInfo) !== null && _msg$trackInfo4 !== void 0 && _msg$trackInfo4.genre ? ` • ${msg.trackInfo.genre}` : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this), msg.message && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mt: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      children: [\"\\\"\", msg.message, \"\\\"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 27\n                  }, this), isHost && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    size: \"small\",\n                    sx: {\n                      mt: 1,\n                      borderRadius: 2,\n                      boxShadow: '0 2px 8px 0 rgba(124,77,255,0.15)'\n                    },\n                    onClick: () => handleAcceptSongRequest(msg),\n                    children: \"Accept & Queue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  sx: {\n                    display: 'block',\n                    textAlign: isCurrentUser ? 'right' : 'left',\n                    mt: 0.5,\n                    px: 1\n                  },\n                  children: formatTime(msg.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)]\n            }, msg.id || index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this);\n          }\n          // Default (text/system) message UI\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            sx: {\n              flexDirection: isCurrentUser ? 'row-reverse' : 'row',\n              px: 1,\n              py: 0.5\n            },\n            children: [!isSystemMessage && /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              sx: {\n                minWidth: 40\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: (_msg$user2 = msg.user) === null || _msg$user2 === void 0 ? void 0 : _msg$user2.username,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    width: 32,\n                    height: 32\n                  },\n                  children: (_msg$user3 = msg.user) === null || _msg$user3 === void 0 ? void 0 : (_msg$user3$username = _msg$user3.username) === null || _msg$user3$username === void 0 ? void 0 : _msg$user3$username.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: '70%',\n                ml: isCurrentUser ? 0 : 1,\n                mr: isCurrentUser ? 1 : 0\n              },\n              children: isSystemMessage ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  my: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  icon: getMessageTypeIcon(msg.type),\n                  label: msg.message,\n                  size: \"small\",\n                  color: getMessageTypeColor(msg.type),\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 0,\n                  sx: {\n                    p: 1.5,\n                    background: isCurrentUser ? 'linear-gradient(135deg, #7c4dff 0%, #b388ff 100%)' : 'rgba(255,255,255,0.7)',\n                    color: isCurrentUser ? 'white' : 'text.primary',\n                    borderRadius: 3,\n                    borderTopRightRadius: isCurrentUser ? 0.5 : 3,\n                    borderTopLeftRadius: isCurrentUser ? 3 : 0.5,\n                    boxShadow: isCurrentUser ? '0 2px 8px 0 rgba(124,77,255,0.15)' : '0 1px 4px 0 rgba(124,77,255,0.05)',\n                    transition: 'background 0.3s, color 0.3s'\n                  },\n                  children: [!isCurrentUser && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: isCurrentUser ? 'primary.contrastText' : 'primary.main',\n                    fontWeight: \"bold\",\n                    children: (_msg$user4 = msg.user) === null || _msg$user4 === void 0 ? void 0 : _msg$user4.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      wordWrap: 'break-word'\n                    },\n                    children: msg.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1,\n                      mt: 1\n                    },\n                    children: [msg.reactions && Object.entries(msg.reactions).map(([emoji, userIds]) => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${emoji} ${userIds.length}`,\n                      size: \"small\",\n                      color: userIds.includes(user.id) ? 'primary' : 'default',\n                      onClick: () => reactToMessage(msg.id, emoji, !userIds.includes(user.id)),\n                      sx: {\n                        cursor: 'pointer',\n                        fontSize: 18,\n                        borderRadius: 2,\n                        boxShadow: userIds.includes(user.id) ? '0 2px 8px 0 rgba(124,77,255,0.15)' : 'none',\n                        transition: 'box-shadow 0.2s'\n                      }\n                    }, emoji, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 31\n                    }, this)), [\"👍\", \"😂\", \"🔥\", \"🎵\", \"❤️\"].map(emoji => /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      onClick: () => reactToMessage(msg.id, emoji, true),\n                      sx: {\n                        minWidth: 32,\n                        fontSize: 18,\n                        p: 0.5,\n                        borderRadius: 2,\n                        transition: 'background 0.2s',\n                        '&:hover': {\n                          background: 'rgba(124,77,255,0.08)'\n                        }\n                      },\n                      children: emoji\n                    }, emoji, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  sx: {\n                    display: 'block',\n                    textAlign: isCurrentUser ? 'right' : 'left',\n                    mt: 0.5,\n                    px: 1\n                  },\n                  children: formatTime(msg.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this)]\n          }, msg.id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Type a message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            variant: \"outlined\",\n            autoComplete: \"off\",\n            multiline: true,\n            maxRows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Send message\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                type: \"submit\",\n                color: \"primary\",\n                disabled: !message.trim(),\n                sx: {\n                  alignSelf: 'flex-end'\n                },\n                children: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomChat, \"tQ3SLmtfiA7ZEHK0JRT3tpad6fA=\", false, function () {\n  return [useSnackbar, useAuth, useSocket];\n});\n_c = RoomChat;\nexport default RoomChat;\nvar _c;\n$RefreshReg$(_c, \"RoomChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useSnackbar","Box","Paper","Typography","TextField","IconButton","List","ListItem","ListItemAvatar","Avatar","ListItemText","Chip","Tooltip","Divider","Button","Dialog","DialogTitle","DialogContent","CircularProgress","Send","Person","Info","Announcement","MusicNote","useSocket","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomChat","room","_s","_participants$find","enqueueSnackbar","user","message","setMessage","showRequestDialog","setShowRequestDialog","trackSearch","setTrackSearch","trackResults","setTrackResults","isSearching","setIsSearching","requestNote","setRequestNote","selectedTrack","setSelectedTrack","messages","sendMessage","participants","reactToMessage","socket","currentRoom","playbackState","isHost","find","p","id","handleAcceptSongRequest","msg","trackId","emit","roomId","variant","autoHideDuration","messagesEndRef","messagesContainerRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","handleOpenRequestDialog","handleCloseRequestDialog","handleTrackSearch","query","res","fetch","encodeURIComponent","data","json","results","tracks","err","handleSelectTrack","track","handleRequestSong","messageType","trackInfo","title","artist","album","genre","duration","formatTime","timestamp","date","Date","toLocaleTimeString","hour","minute","getMessageTypeIcon","type","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","getMessageTypeColor","elevation","sx","height","display","flexDirection","background","backdropFilter","borderRadius","boxShadow","border","children","borderBottom","borderColor","alignItems","justifyContent","position","top","zIndex","borderTopLeftRadius","borderTopRightRadius","gutterBottom","gap","size","label","length","ref","flexGrow","overflow","maxHeight","transition","color","map","index","_msg$user","_msg$user2","_msg$user3","_msg$user3$username","_msg$user4","isCurrentUser","isSystemMessage","_msg$username","_msg$trackInfo","_msg$trackInfo2","_msg$trackInfo3","_msg$trackInfo4","px","py","mb","minWidth","username","width","bgcolor","charAt","toUpperCase","maxWidth","ml","mr","borderLeft","fontWeight","mt","onClick","textAlign","my","icon","wordWrap","reactions","Object","entries","emoji","userIds","includes","cursor","onSubmit","fullWidth","placeholder","value","onChange","target","autoComplete","multiline","maxRows","disabled","alignSelf","_c","$RefreshReg$"],"sources":["/Users/walesolagbade/streaming_app/client/src/components/RoomChat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Chip,\n  Tooltip,\n  Divider,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  CircularProgress\n} from '@mui/material';\nimport {\n  Send,\n  Person,\n  Info,\n  Announcement,\n  MusicNote\n} from '@mui/icons-material';\n\nimport { useSocket } from '../contexts/SocketContext_enhanced';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst RoomChat = ({ room }) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const [message, setMessage] = useState('');\n  const [showRequestDialog, setShowRequestDialog] = useState(false);\n  const [trackSearch, setTrackSearch] = useState('');\n  const [trackResults, setTrackResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [requestNote, setRequestNote] = useState('');\n  const [selectedTrack, setSelectedTrack] = useState(null);\n\n  const { messages, sendMessage, participants, reactToMessage, socket, currentRoom, playbackState } = useSocket();\n  // Determine if current user is host\n  const isHost = participants.find(p => p.id === user.id)?.isHost;\n\n  // Host: Accept & Queue song request\n  const handleAcceptSongRequest = (msg) => {\n    if (!isHost || !msg.trackId) return;\n    if (socket && currentRoom) {\n      socket.emit('room:add-track', {\n        roomId: currentRoom,\n        trackId: msg.trackId\n      });\n      enqueueSnackbar('Song request accepted and added to queue!', { variant: 'success', autoHideDuration: 2500 });\n    } else {\n      enqueueSnackbar('Failed to accept song request.', { variant: 'error', autoHideDuration: 2500 });\n    }\n  };\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    sendMessage(message.trim());\n    setMessage('');\n    enqueueSnackbar('Message sent!', { variant: 'info', autoHideDuration: 1500 });\n  };\n\n  // Song request logic\n  const handleOpenRequestDialog = () => {\n    setShowRequestDialog(true);\n    setTrackSearch('');\n    setTrackResults([]);\n    setRequestNote('');\n    setSelectedTrack(null);\n  };\n  const handleCloseRequestDialog = () => {\n    setShowRequestDialog(false);\n  };\n  const handleTrackSearch = async (query) => {\n    setTrackSearch(query);\n    if (!query.trim()) {\n      setTrackResults([]);\n      return;\n    }\n    setIsSearching(true);\n    try {\n      const res = await fetch(`/api/search?q=${encodeURIComponent(query)}&type=tracks`);\n      const data = await res.json();\n      setTrackResults((data.results && data.results.tracks) ? data.results.tracks : []);\n    } catch (err) {\n      setTrackResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleSelectTrack = (track) => {\n    setSelectedTrack(track);\n  };\n  const handleRequestSong = () => {\n    if (!selectedTrack) {\n      enqueueSnackbar('Please select a track to request.', { variant: 'warning', autoHideDuration: 2000 });\n      return;\n    }\n    // Send as a special chat message\n    if (socket && currentRoom) {\n      socket.emit('room:chat-message', {\n        roomId: currentRoom,\n        message: requestNote,\n        messageType: 'song_request',\n        trackId: selectedTrack.id,\n        trackInfo: {\n          title: selectedTrack.title,\n          artist: selectedTrack.artist,\n          album: selectedTrack.album,\n          genre: selectedTrack.genre,\n          duration: selectedTrack.duration\n        }\n      });\n      enqueueSnackbar('Song request sent!', { variant: 'success', autoHideDuration: 2000 });\n    } else {\n      enqueueSnackbar('Failed to send song request.', { variant: 'error', autoHideDuration: 2000 });\n    }\n    setShowRequestDialog(false);\n    setSelectedTrack(null);\n    setRequestNote('');\n    setTrackSearch('');\n    setTrackResults([]);\n  };\n\n\n\n\n\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const getMessageTypeIcon = (type) => {\n    switch (type) {\n      case 'system':\n        return <Info fontSize=\"small\" />;\n      case 'announcement':\n        return <Announcement fontSize=\"small\" />;\n      default:\n        return <Person fontSize=\"small\" />;\n    }\n  };\n\n  const getMessageTypeColor = (type) => {\n    switch (type) {\n      case 'system':\n        return 'info';\n      case 'announcement':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  return (\n    <Paper elevation={6} sx={{\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      background: 'rgba(255,255,255,0.15)',\n      backdropFilter: 'blur(16px) saturate(180%)',\n      borderRadius: 4,\n      boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.15)',\n      border: '1px solid rgba(255,255,255,0.18)'\n    }}>\n      {/* Chat Header */}\n      <Box sx={{\n        p: 2,\n        borderBottom: 1,\n        borderColor: 'divider',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        zIndex: 2,\n        background: 'rgba(255,255,255,0.25)',\n        backdropFilter: 'blur(12px) saturate(180%)',\n        borderTopLeftRadius: 16,\n        borderTopRightRadius: 16\n      }}>\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Chat\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Chip \n              size=\"small\" \n              label={`${participants.length} participant${participants.length !== 1 ? 's' : ''}`}\n              variant=\"outlined\"\n            />\n            <Chip \n              size=\"small\" \n              label={`${messages.length} message${messages.length !== 1 ? 's' : ''}`}\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n      </Box>\n\n      {/* Messages Container */}\n      <Box \n        ref={messagesContainerRef}\n        sx={{ \n          flexGrow: 1, \n          overflow: 'auto', \n          maxHeight: '400px',\n          p: 1,\n          background: 'rgba(255,255,255,0.10)',\n          transition: 'background 0.3s',\n          borderRadius: 3\n        }}\n      >\n        {messages.length === 0 ? (\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'center', \n            height: '100%',\n            color: 'text.secondary'\n          }}>\n            <Typography variant=\"body2\">\n              No messages yet. Start the conversation!\n            </Typography>\n          </Box>\n        ) : (\n          <List sx={{ p: 0 }}>\n            {messages.map((msg, index) => {\n              const isCurrentUser = msg.user?.id === user.id;\n              const isSystemMessage = msg.type !== 'text' && msg.type !== 'song_request';\n              if (msg.type === 'song_request') {\n                // Song request message UI\n                return (\n                  <ListItem\n                    key={msg.id || index}\n                    alignItems=\"flex-start\"\n                    sx={{\n                      flexDirection: isCurrentUser ? 'row-reverse' : 'row',\n                      px: 1, py: 0.5,\n                      transition: 'background 0.3s',\n                      borderRadius: 3,\n                      mb: 1,\n                      background: isCurrentUser ? 'rgba(124,77,255,0.10)' : 'rgba(243,229,245,0.7)',\n                      boxShadow: isCurrentUser ? '0 2px 8px 0 rgba(124,77,255,0.10)' : '0 2px 8px 0 rgba(124,77,255,0.05)'\n                    }}\n                  >\n                    <ListItemAvatar sx={{ minWidth: 40 }}>\n                      <Tooltip title={msg.username}>\n                        <Avatar sx={{\n                          width: 36,\n                          height: 36,\n                          bgcolor: 'secondary.main',\n                          border: msg.isHost ? '2px solid #7c4dff' : '2px solid #fff',\n                          boxShadow: msg.isHost ? '0 0 0 2px #7c4dff' : 'none',\n                          transition: 'border 0.2s, box-shadow 0.2s'\n                        }}>\n                          {msg.username?.charAt(0).toUpperCase()}\n                        </Avatar>\n                      </Tooltip>\n                    </ListItemAvatar>\n                    <Box sx={{ maxWidth: '70%', ml: isCurrentUser ? 0 : 1, mr: isCurrentUser ? 1 : 0 }}>\n                      <Paper elevation={0} sx={{\n                        p: 1.5,\n                        background: 'rgba(124,77,255,0.08)',\n                        borderLeft: '6px solid #7c4dff',\n                        borderRadius: 3,\n                        boxShadow: '0 1px 4px 0 rgba(124,77,255,0.08)'\n                      }}>\n                        <Typography variant=\"caption\" color=\"secondary\" fontWeight=\"bold\">\n                          {msg.username} requested a song:\n                        </Typography>\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 600 }}>\n                          {msg.trackInfo?.title || 'Unknown Title'}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {msg.trackInfo?.artist || 'Unknown Artist'}\n                          {msg.trackInfo?.album ? ` • ${msg.trackInfo.album}` : ''}\n                          {msg.trackInfo?.genre ? ` • ${msg.trackInfo.genre}` : ''}\n                        </Typography>\n                        {msg.message && (\n                          <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                            <i>\"{msg.message}\"</i>\n                          </Typography>\n                        )}\n                        {/* Host action: Accept/Queue button */}\n                        {isHost && (\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"small\"\n                            sx={{ mt: 1, borderRadius: 2, boxShadow: '0 2px 8px 0 rgba(124,77,255,0.15)' }}\n                            onClick={() => handleAcceptSongRequest(msg)}\n                          >\n                            Accept & Queue\n                          </Button>\n                        )}\n                      </Paper>\n                      <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', textAlign: isCurrentUser ? 'right' : 'left', mt: 0.5, px: 1 }}>\n                        {formatTime(msg.timestamp)}\n                      </Typography>\n                    </Box>\n                  </ListItem>\n                );\n              }\n              // Default (text/system) message UI\n              return (\n                <ListItem\n                  key={msg.id || index}\n                  alignItems=\"flex-start\"\n                  sx={{ flexDirection: isCurrentUser ? 'row-reverse' : 'row', px: 1, py: 0.5 }}\n                >\n                  {!isSystemMessage && (\n                    <ListItemAvatar sx={{ minWidth: 40 }}>\n                      <Tooltip title={msg.user?.username}>\n                        <Avatar sx={{ width: 32, height: 32 }}>\n                          {msg.user?.username?.charAt(0).toUpperCase()}\n                        </Avatar>\n                      </Tooltip>\n                    </ListItemAvatar>\n                  )}\n                  <Box sx={{ maxWidth: '70%', ml: isCurrentUser ? 0 : 1, mr: isCurrentUser ? 1 : 0 }}>\n                    {isSystemMessage ? (\n                      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', my: 1 }}>\n                        <Chip\n                          icon={getMessageTypeIcon(msg.type)}\n                          label={msg.message}\n                          size=\"small\"\n                          color={getMessageTypeColor(msg.type)}\n                          variant=\"outlined\"\n                        />\n                      </Box>\n                    ) : (\n                      <>\n                        <Paper\n                          elevation={0}\n                          sx={{\n                            p: 1.5,\n                            background: isCurrentUser ? 'linear-gradient(135deg, #7c4dff 0%, #b388ff 100%)' : 'rgba(255,255,255,0.7)',\n                            color: isCurrentUser ? 'white' : 'text.primary',\n                            borderRadius: 3,\n                            borderTopRightRadius: isCurrentUser ? 0.5 : 3,\n                            borderTopLeftRadius: isCurrentUser ? 3 : 0.5,\n                            boxShadow: isCurrentUser ? '0 2px 8px 0 rgba(124,77,255,0.15)' : '0 1px 4px 0 rgba(124,77,255,0.05)',\n                            transition: 'background 0.3s, color 0.3s'\n                          }}\n                        >\n                          {!isCurrentUser && (\n                            <Typography \n                              variant=\"caption\" \n                              color={isCurrentUser ? 'primary.contrastText' : 'primary.main'}\n                              fontWeight=\"bold\"\n                            >\n                              {msg.user?.username}\n                            </Typography>\n                          )}\n                          <Typography variant=\"body2\" sx={{ wordWrap: 'break-word' }}>\n                            {msg.message}\n                          </Typography>\n                          {/* Emoji Reactions UI */}\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 1 }}>\n                            {msg.reactions && Object.entries(msg.reactions).map(([emoji, userIds]) => (\n                              <Chip\n                                key={emoji}\n                                label={`${emoji} ${userIds.length}`}\n                                size=\"small\"\n                                color={userIds.includes(user.id) ? 'primary' : 'default'}\n                                onClick={() => reactToMessage(msg.id, emoji, !userIds.includes(user.id))}\n                                sx={{\n                                  cursor: 'pointer',\n                                  fontSize: 18,\n                                  borderRadius: 2,\n                                  boxShadow: userIds.includes(user.id) ? '0 2px 8px 0 rgba(124,77,255,0.15)' : 'none',\n                                  transition: 'box-shadow 0.2s'\n                                }}\n                              />\n                            ))}\n                            {/* Animated emoji picker */}\n                            {[\"👍\", \"😂\", \"🔥\", \"🎵\", \"❤️\"].map(emoji => (\n                              <Button\n                                key={emoji}\n                                size=\"small\"\n                                onClick={() => reactToMessage(msg.id, emoji, true)}\n                                sx={{\n                                  minWidth: 32,\n                                  fontSize: 18,\n                                  p: 0.5,\n                                  borderRadius: 2,\n                                  transition: 'background 0.2s',\n                                  '&:hover': { background: 'rgba(124,77,255,0.08)' }\n                                }}\n                              >\n                                {emoji}\n                              </Button>\n                            ))}\n                          </Box>\n                        </Paper>\n                        <Typography \n                          variant=\"caption\" \n                          color=\"text.secondary\"\n                          sx={{ display: 'block', textAlign: isCurrentUser ? 'right' : 'left', mt: 0.5, px: 1 }}\n                        >\n                          {formatTime(msg.timestamp)}\n                        </Typography>\n                      </>\n                    )}\n                  </Box>\n                </ListItem>\n              );\n            })}\n            <div ref={messagesEndRef} />\n          </List>\n        )}\n      </Box>\n\n      {/* Message Input */}\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <form onSubmit={handleSendMessage}>\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              placeholder=\"Type a message...\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              multiline\n              maxRows={3}\n            />\n            <Tooltip title=\"Send message\">\n              <span>\n                <IconButton \n                  type=\"submit\" \n                  color=\"primary\"\n                  disabled={!message.trim()}\n                  sx={{ alignSelf: 'flex-end' }}\n                >\n                  <Send />\n                </IconButton>\n              </span>\n            </Tooltip>\n          </Box>\n        </form>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default RoomChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}