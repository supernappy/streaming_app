{"ast":null,"code":"var _jsxFileName = \"/Users/walesolagbade/streaming_app/client/src/components/ThreeDBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\n\n// 3D background with floating, animated music notes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOTE_COLORS = [0x1DB954, 0x1ed760, 0xffffff, 0x8e24aa, 0x2196f3, 0xffc107];\nfunction createMusicNoteMesh(color) {\n  // Simple 3D music note: a sphere (note head) and a cylinder (stem)\n  const group = new THREE.Group();\n  const headGeo = new THREE.SphereGeometry(1.1, 24, 24);\n  const headMat = new THREE.MeshStandardMaterial({\n    color,\n    emissive: color,\n    emissiveIntensity: 0.5,\n    metalness: 0.7,\n    roughness: 0.3\n  });\n  const head = new THREE.Mesh(headGeo, headMat);\n  group.add(head);\n  const stemGeo = new THREE.CylinderGeometry(0.22, 0.22, 3.2, 16);\n  const stemMat = new THREE.MeshStandardMaterial({\n    color,\n    metalness: 0.8,\n    roughness: 0.2\n  });\n  const stem = new THREE.Mesh(stemGeo, stemMat);\n  stem.position.set(0.7, 1.6, 0);\n  stem.rotation.z = -0.3;\n  group.add(stem);\n  // Optionally add a flag (curved line)\n  const flagCurve = new THREE.CubicBezierCurve3(new THREE.Vector3(0.7, 3, 0), new THREE.Vector3(2, 3.5, 0), new THREE.Vector3(2, 2.2, 0), new THREE.Vector3(0.7, 2.2, 0));\n  const flagPoints = flagCurve.getPoints(20);\n  const flagGeo = new THREE.BufferGeometry().setFromPoints(flagPoints);\n  const flagMat = new THREE.LineBasicMaterial({\n    color,\n    linewidth: 2\n  });\n  const flag = new THREE.Line(flagGeo, flagMat);\n  group.add(flag);\n  return group;\n}\nconst ThreeDBackground = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(60, width / height, 0.1, 1000);\n    camera.position.z = 60;\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x000000, 0);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add soft colored lights\n    const ambient = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambient);\n    const light1 = new THREE.PointLight(0x1DB954, 1.2, 200);\n    light1.position.set(-30, 30, 40);\n    scene.add(light1);\n    const light2 = new THREE.PointLight(0x1ed760, 1.0, 200);\n    light2.position.set(30, -30, 40);\n    scene.add(light2);\n\n    // Create floating music notes\n    const notes = [];\n    const noteCount = 18;\n    for (let i = 0; i < noteCount; i++) {\n      const color = NOTE_COLORS[i % NOTE_COLORS.length];\n      const note = createMusicNoteMesh(color);\n      note.position.set((Math.random() - 0.5) * 80, (Math.random() - 0.5) * 40, (Math.random() - 0.5) * 40);\n      note.userData = {\n        speed: 0.2 + Math.random() * 0.5,\n        rotSpeed: 0.002 + Math.random() * 0.004,\n        floatPhase: Math.random() * Math.PI * 2\n      };\n      scene.add(note);\n      notes.push(note);\n    }\n\n    // Animate the notes\n    function animate(time) {\n      requestAnimationFrame(animate);\n      notes.forEach((note, i) => {\n        // Floating up and down\n        note.position.y += Math.sin(time / 900 + note.userData.floatPhase + i) * 0.01 * note.userData.speed;\n        note.position.x += Math.cos(time / 1200 + note.userData.floatPhase + i) * 0.008 * note.userData.speed;\n        note.rotation.y += note.userData.rotSpeed;\n        note.rotation.x += note.userData.rotSpeed * 0.5;\n        // Loop notes back to screen if they float too far\n        if (note.position.y > 30) note.position.y = -30;\n        if (note.position.y < -30) note.position.y = 30;\n        if (note.position.x > 50) note.position.x = -50;\n        if (note.position.x < -50) note.position.x = 50;\n      });\n      renderer.render(scene, camera);\n    }\n    animate(0);\n\n    // Handle resize\n    function handleResize() {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      zIndex: 0,\n      pointerEvents: 'none',\n      overflow: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeDBackground, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeDBackground;\nexport default ThreeDBackground;\nvar _c;\n$RefreshReg$(_c, \"ThreeDBackground\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","NOTE_COLORS","createMusicNoteMesh","color","group","Group","headGeo","SphereGeometry","headMat","MeshStandardMaterial","emissive","emissiveIntensity","metalness","roughness","head","Mesh","add","stemGeo","CylinderGeometry","stemMat","stem","position","set","rotation","z","flagCurve","CubicBezierCurve3","Vector3","flagPoints","getPoints","flagGeo","BufferGeometry","setFromPoints","flagMat","LineBasicMaterial","linewidth","flag","Line","ThreeDBackground","_s","mountRef","width","window","innerWidth","height","innerHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","alpha","antialias","setSize","setClearColor","current","appendChild","domElement","ambient","AmbientLight","light1","PointLight","light2","notes","noteCount","i","length","note","Math","random","userData","speed","rotSpeed","floatPhase","PI","push","animate","time","requestAnimationFrame","forEach","y","sin","x","cos","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","dispose","ref","style","top","left","zIndex","pointerEvents","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/walesolagbade/streaming_app/client/src/components/ThreeDBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\n\n// 3D background with floating, animated music notes\nconst NOTE_COLORS = [0x1DB954, 0x1ed760, 0xffffff, 0x8e24aa, 0x2196f3, 0xffc107];\n\nfunction createMusicNoteMesh(color) {\n  // Simple 3D music note: a sphere (note head) and a cylinder (stem)\n  const group = new THREE.Group();\n  const headGeo = new THREE.SphereGeometry(1.1, 24, 24);\n  const headMat = new THREE.MeshStandardMaterial({ color, emissive: color, emissiveIntensity: 0.5, metalness: 0.7, roughness: 0.3 });\n  const head = new THREE.Mesh(headGeo, headMat);\n  group.add(head);\n  const stemGeo = new THREE.CylinderGeometry(0.22, 0.22, 3.2, 16);\n  const stemMat = new THREE.MeshStandardMaterial({ color, metalness: 0.8, roughness: 0.2 });\n  const stem = new THREE.Mesh(stemGeo, stemMat);\n  stem.position.set(0.7, 1.6, 0);\n  stem.rotation.z = -0.3;\n  group.add(stem);\n  // Optionally add a flag (curved line)\n  const flagCurve = new THREE.CubicBezierCurve3(\n    new THREE.Vector3(0.7, 3, 0),\n    new THREE.Vector3(2, 3.5, 0),\n    new THREE.Vector3(2, 2.2, 0),\n    new THREE.Vector3(0.7, 2.2, 0)\n  );\n  const flagPoints = flagCurve.getPoints(20);\n  const flagGeo = new THREE.BufferGeometry().setFromPoints(flagPoints);\n  const flagMat = new THREE.LineBasicMaterial({ color, linewidth: 2 });\n  const flag = new THREE.Line(flagGeo, flagMat);\n  group.add(flag);\n  return group;\n}\n\nconst ThreeDBackground = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(60, width / height, 0.1, 1000);\n    camera.position.z = 60;\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x000000, 0);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add soft colored lights\n    const ambient = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambient);\n    const light1 = new THREE.PointLight(0x1DB954, 1.2, 200);\n    light1.position.set(-30, 30, 40);\n    scene.add(light1);\n    const light2 = new THREE.PointLight(0x1ed760, 1.0, 200);\n    light2.position.set(30, -30, 40);\n    scene.add(light2);\n\n    // Create floating music notes\n    const notes = [];\n    const noteCount = 18;\n    for (let i = 0; i < noteCount; i++) {\n      const color = NOTE_COLORS[i % NOTE_COLORS.length];\n      const note = createMusicNoteMesh(color);\n      note.position.set(\n        (Math.random() - 0.5) * 80,\n        (Math.random() - 0.5) * 40,\n        (Math.random() - 0.5) * 40\n      );\n      note.userData = {\n        speed: 0.2 + Math.random() * 0.5,\n        rotSpeed: 0.002 + Math.random() * 0.004,\n        floatPhase: Math.random() * Math.PI * 2\n      };\n      scene.add(note);\n      notes.push(note);\n    }\n\n    // Animate the notes\n    function animate(time) {\n      requestAnimationFrame(animate);\n      notes.forEach((note, i) => {\n        // Floating up and down\n        note.position.y += Math.sin(time / 900 + note.userData.floatPhase + i) * 0.01 * note.userData.speed;\n        note.position.x += Math.cos(time / 1200 + note.userData.floatPhase + i) * 0.008 * note.userData.speed;\n        note.rotation.y += note.userData.rotSpeed;\n        note.rotation.x += note.userData.rotSpeed * 0.5;\n        // Loop notes back to screen if they float too far\n        if (note.position.y > 30) note.position.y = -30;\n        if (note.position.y < -30) note.position.y = 30;\n        if (note.position.x > 50) note.position.x = -50;\n        if (note.position.x < -50) note.position.x = 50;\n      });\n      renderer.render(scene, camera);\n    }\n    animate(0);\n\n    // Handle resize\n    function handleResize() {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    }\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n\n  return (\n    <div\n      ref={mountRef}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        zIndex: 0,\n        pointerEvents: 'none',\n        overflow: 'hidden',\n      }}\n    />\n  );\n};\n\nexport default ThreeDBackground;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}